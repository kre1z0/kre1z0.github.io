{"version":3,"sources":["webpack:///./src/components/HowWeAreWorking/styles.js","webpack:///./src/components/HowWeAreWorking/HowWeAreWorking.js","webpack:///./src/components/TeamMembers/TeamMembers.js","webpack:///./src/utils/number.js","webpack:///./src/components/ScrollableTeamMembers/ScrollableTeamMembers.js","webpack:///./src/styles/jobs.js","webpack:///./src/pages/jobs/index.js","webpack:///./src/components/HowWeAreWorking/Principle/styles.js","webpack:///./src/components/HowWeAreWorking/Principle/Principle.js"],"names":["HowWeAreWorkingContainer","styled","require","Title","Paragraph","styles","HowWeAreWorking","_ref","items","className","react_default","a","createElement","Principle","GoNextLink","to","gatsby","howWeAreWorkingLink","propTypes","PropTypes","arrayOf","object","string","TeamMembers","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","cardHeight","photoHeight","onResize","Math","max","document","documentElement","clientWidth","window","innerWidth","setState","inheritsLoose_default","_proto","prototype","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","shouldComponentUpdate","_ref2","_ref3","nextSelectedId","selectedId","nextCardHeight","_this$props","props","id","render","newArray","firstCol","lastCol","n","min","_this$state","_this$props2","isVacancy","isPhoto","data","slice","forEach","item","i","push","height","top","half","round","containerHeight","ceil","noVacancies","HowWeAreWorking_HowWeAreWorking","oneItem","style","NoVacancyCard","map","index","key","marginTop","marginBottom","src","alt","TeamMemberCard","Object","assign","control","longreadLink","avatar","vacancy","withMarginTop","margin","Component","oneOfType","onSectionChange","func","defaultProps","ScrollableTeamMembers","_PureComponent","sections","Fragment","TeamMembers_TeamMembers","PureComponent","transitionEnd","bool","Main","MainBlock","BackgroundWrapper","WillChange","LeftSide","Side","RightSide","RightSideContent","JobsBase","prevScrollTop","componentDidUpdate","prevState","prevTransitionEnd","scrollTop","location","selectedSectionIndex","onScrollableRef","onLeftSideSectionRef","status","routes","direction","getRouteByLocation","section","transform","jobs_Main","Background","background","ref","animation","AdditionalMenu","menu","leftSide","additionalMenu","isOpen","ScrollableTeamMembers_ScrollableTeamMembers","Jobs","MainLayoutProvider","layoutProps","jobs_JobsBase","Container","Item","H4","Description","Badge","Content","__webpack_require__","d","__webpack_exports__","Principle_Principle","itemClassName","_ref$longread","longread","icon","title","description","backgroundImage"],"mappings":"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","file":"component---src-pages-jobs-index-js-8329bb381c99a4c2e467.js","sourcesContent":["import styled from \"astroturf\"\n\nexport const HowWeAreWorkingContainer = styled(\"div\", null, \"HowWeAreWorkingContainer\", require(\"./styles-HowWeAreWorkingContainer.module.scss\"), \"how-we-are-working-container\", \"howWeAreWorkingContainer\");\n\nexport const Title = styled(\"h4\", null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const Paragraph = styled(\"p\", null, \"Paragraph\", require(\"./styles-Paragraph.module.scss\"), \"paragraph\", \"paragraph\");\n\nconst styles = require('./styles-styles.module.scss');\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { GoNextLink } from \"../../components/GoNextLink/GoNextLink\";\nimport { Principle } from \"./Principle/Principle\";\nimport styles, { HowWeAreWorkingContainer, Title, Paragraph } from \"./styles\";\n\nexport const HowWeAreWorking = ({ items, className }) => {\n  return (\n    <HowWeAreWorkingContainer className={className}>\n      <Title>Как мы работаем</Title>\n      <Paragraph>\n        Мы считаем, что успех любого дела зависит от команды, поэтому создали атмосферу, комфортную\n        для сотрудников.\n        <br />\n        <br />\n        Стараемся давать задачи подходящего уровня, но если сотрудник хочет прыгнуть выше своей\n        головы — команда ему поможет.\n        <br />\n        <br />\n        Каждый член команды — это человек, с которым приятно работать.\n      </Paragraph>\n      <br />\n      <Title>Наши принципы:</Title>\n      <Principle items={items} />\n      <GoNextLink to=\"/work\" gatsby className={styles.howWeAreWorkingLink}>\n        Подробнее о работе в Everpoint\n      </GoNextLink>\n    </HowWeAreWorkingContainer>\n  );\n};\n\nHowWeAreWorking.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  className: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { rateLimit } from \"../../utils/number\";\nimport { NoVacancyCard } from \"./NoVacancyCard\";\nimport { GoNextLink } from \"../../components/GoNextLink/GoNextLink\";\nimport { TeamMemberCard } from \"../../components/TeamMemberCard/TeamMemberCard\";\nimport { TeamMembersContainer, PhotoContainer } from \"./styles\";\nimport { HowWeAreWorking } from \"../HowWeAreWorking/HowWeAreWorking\";\n\nfunction getColumns({ items }) {\n  const newArray = items.slice();\n\n  const firstCol = [];\n  const lastCol = [];\n  newArray.forEach((item, i) => (i % 2 ? lastCol.push(item) : firstCol.push(item)));\n  return firstCol.concat(lastCol);\n}\n\nexport class TeamMembers extends Component {\n  static propTypes = {\n    items: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.object),\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n    id: PropTypes.string,\n    onSectionChange: PropTypes.func,\n    selectedId: PropTypes.string,\n  };\n\n  state = {\n    cardHeight: 320,\n    photoHeight: 225,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.onResize);\n    this.onResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onResize);\n  }\n\n  shouldComponentUpdate({ selectedId: nextSelectedId }, { cardHeight: nextCardHeight }) {\n    const { cardHeight } = this.state;\n    const { selectedId, id } = this.props;\n\n    return (\n      (selectedId !== nextSelectedId && (nextSelectedId === id || selectedId === id)) ||\n      cardHeight !== nextCardHeight\n    );\n  }\n\n  static defaultProps = {\n    items: [],\n  };\n\n  onResize = () => {\n    const viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    if (viewportWidth <= 992) {\n      this.setState({ photoHeight: 164 });\n    } else {\n      this.setState({ photoHeight: 225 });\n    }\n  };\n\n  render() {\n    const { cardHeight, photoHeight } = this.state;\n    const margin = 30;\n    const { items, id } = this.props;\n    const isVacancy = id === \"vacancy\";\n    const isPhoto = id === \"photo\";\n    const data = getColumns({ items });\n    const height = isPhoto ? photoHeight : cardHeight;\n    const top = height / 2;\n    const half = Math.round(data.length / 2);\n    const containerHeight =\n      data.length > 2\n        ? Math.ceil(data.length / 2) * (height + margin) +\n          (data.length % 2 === 0 ? height / 2 : 0) +\n          4\n        : rateLimit(Math.ceil(data.length / 2), 1) * height + 4;\n\n    const noVacancies = isVacancy && items && items.length === 0;\n\n    if (id === \"process\") {\n      return (\n        <TeamMembersContainer>\n          <HowWeAreWorking items={items} />\n        </TeamMembersContainer>\n      );\n    }\n\n    return (\n      <TeamMembersContainer oneItem={data.length <= 1} style={{ height: containerHeight + \"px\" }}>\n        {noVacancies ? (\n          <NoVacancyCard />\n        ) : (\n          data.map((item, index) => {\n            if (isPhoto) {\n              const key = `photo-${index + 1}`;\n              return (\n                <PhotoContainer\n                  style={{ marginTop: index === half && top, height, marginBottom: margin }}\n                  key={key}\n                >\n                  <img src={item} alt={key} />\n                </PhotoContainer>\n              );\n            }\n\n            return (\n              <TeamMemberCard\n                control={\n                  isVacancy ? (\n                    <GoNextLink gatsby to={item.longreadLink}>\n                      Описание вакансии\n                    </GoNextLink>\n                  ) : null\n                }\n                avatar={item.avatar}\n                vacancy={isVacancy}\n                withMarginTop={index === half}\n                height={height}\n                top={top}\n                margin={margin}\n                key={item.id}\n                {...item}\n              />\n            );\n          })\n        )}\n      </TeamMembersContainer>\n    );\n  }\n}\n","export function rateLimit(n, min, max) {\n  if (n < min) {\n    return min;\n  } else if (n > max) {\n    return max;\n  } else {\n    return n;\n  }\n}","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { TeamMembers } from \"../TeamMembers/TeamMembers\";\n\nexport class ScrollableTeamMembers extends PureComponent {\n  static propTypes = {\n    onSectionChange: PropTypes.func,\n    transitionEnd: PropTypes.bool,\n    sections: PropTypes.arrayOf(PropTypes.object),\n  };\n\n  render() {\n    const { selectedId, onSectionChange, sections } = this.props;\n\n    return (\n      <>\n        {sections.map(item => (\n          <TeamMembers\n            key={item.id}\n            sections={sections}\n            selectedId={selectedId}\n            onSectionChange={onSectionChange}\n            {...item}\n          />\n        ))}\n      </>\n    );\n  }\n}\n","import styled from \"astroturf\"\n\nimport { Main as MainBlock } from \"../components/MainPageElements/Main\";\nimport { Side } from \"../components/MainPageElements/Section\";\n\nexport const Main = styled(MainBlock, null, \"Main\", require(\"./jobs-Main.module.scss\"), \"main\", \"main\");\n\nexport const BackgroundWrapper = styled(\"div\", null, \"BackgroundWrapper\", require(\"./jobs-BackgroundWrapper.module.scss\"), \"background-wrapper\", \"backgroundWrapper\");\n\nexport const WillChange = styled(\"div\", null, \"WillChange\", require(\"./jobs-WillChange.module.scss\"), \"will-change\", \"willChange\");\n\nexport const LeftSide = styled(Side, null, \"LeftSide\", require(\"./jobs-LeftSide.module.scss\"), \"left-side\", \"leftSide\");\n\nexport const RightSide = styled(Side, null, \"RightSide\", require(\"./jobs-RightSide.module.scss\"), \"right-side\", \"rightSide\");\n\nexport const RightSideContent = styled(\"div\", null, \"RightSideContent\", require(\"./jobs-RightSideContent.module.scss\"), \"right-side-content\", \"rightSideContent\");\n\nconst styles = require('./jobs-styles.module.scss');\n\nexport default styles;\n","import React, { Component } from \"react\";\n\nimport { Background } from \"../../components/MainPageElements/Background\";\nimport { MainLayoutConsumer } from \"../../components/MainLayoutProvider/MainLayoutProvider\";\nimport { AdditionalMenu } from \"../../components/AdditionalMenu/AdditionalMenu\";\nimport { ScrollableTeamMembers } from \"../../components/ScrollableTeamMembers/ScrollableTeamMembers\";\nimport { getRouteByLocation } from \"../../routes/utils\";\nimport styles, {\n  Main,\n  BackgroundWrapper,\n  LeftSide,\n  RightSide,\n  RightSideContent,\n  WillChange,\n} from \"../../styles/jobs\";\nimport { animation } from \"../../components/MainPageElements/Section\";\n\nexport class JobsBase extends Component {\n  state = {\n    prevScrollTop: 0,\n  };\n\n  componentDidUpdate({ transitionEnd: prevTransitionEnd }, prevState) {\n    const { transitionEnd, scrollTop } = this.props;\n\n    if (prevTransitionEnd !== transitionEnd) {\n      this.setState({ prevScrollTop: scrollTop });\n    }\n  }\n\n  render() {\n    const { prevScrollTop } = this.state;\n    const {\n      location,\n      selectedSectionIndex,\n      onSectionChange,\n      onScrollableRef,\n      onLeftSideSectionRef,\n      transitionEnd,\n      scrollTop,\n      status,\n      routes,\n      direction,\n    } = this.props;\n    const currentRoute = getRouteByLocation(location, routes);\n    const { sections } = currentRoute;\n    const section = sections[selectedSectionIndex];\n\n    const transform = `translateY(${scrollTop}px)`;\n\n    return (\n      <Main>\n        <BackgroundWrapper style={{ transform }}>\n          <Background className={styles.background} status={status} location={location} />\n        </BackgroundWrapper>\n        <WillChange style={{ transform }} ref={onLeftSideSectionRef}>\n          <LeftSide className={animation(status, direction)}>\n            <AdditionalMenu\n              className={styles.menu}\n              selectedId={section && section.id}\n              onSectionChange={onSectionChange}\n              leftSide\n              additionalMenu={sections}\n              isOpen={true}\n            />\n          </LeftSide>\n        </WillChange>\n        <RightSide className={animation(status, direction)}>\n          <RightSideContent\n            ref={onScrollableRef}\n            style={{\n              transform: !transitionEnd && `translateY(-${prevScrollTop}px)`,\n            }}\n          >\n            <ScrollableTeamMembers\n              sections={sections}\n              transitionEnd={transitionEnd}\n              onSectionChange={onSectionChange}\n            />\n          </RightSideContent>\n        </RightSide>\n      </Main>\n    );\n  }\n}\n\nconst Jobs = props => (\n  <MainLayoutConsumer>{layoutProps => <JobsBase {...props} {...layoutProps} />}</MainLayoutConsumer>\n);\n\nexport default Jobs;\n","import styled from \"astroturf\";\n\nimport { H4 } from \"../../../components/Typography/Headlines\";\n\nexport const Container = styled(\"div\", null, \"Container\", require(\"./styles-Container.module.scss\"), \"container\", \"container\");\n\nexport const Item = styled(\"article\", null, \"Item\", require(\"./styles-Item.module.scss\"), \"item\", \"item\");\n\nexport const Title = styled(H4, null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const Description = styled(\"p\", null, \"Description\", require(\"./styles-Description.module.scss\"), \"description\", \"description\");\n\nexport const Badge = styled(\"div\", null, \"Badge\", require(\"./styles-Badge.module.scss\"), \"badge\", \"badge\");\n\nexport const Content = styled(\"div\", null, \"Content\", require(\"./styles-Content.module.scss\"), \"content\", \"content\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Container, Item, Badge, Content, Title, Description } from \"./styles\";\n\nexport const Principle = ({ items, itemClassName, longread = false }) => (\n  <Container longread={longread}>\n    {items &&\n      items.map(({ icon, title, description }) => (\n        <Item key={title} className={itemClassName}>\n          <Badge style={{ backgroundImage: `url(${icon})` }} longread={longread} />\n          <Content>\n            {longread ? <Title>{title}</Title> : <span>{title}</span>}\n            {longread && <Description>{description}</Description>}\n          </Content>\n        </Item>\n      ))}\n  </Container>\n);\n\nPrinciple.propTypes = {\n  itemClassName: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.object),\n};\n"],"sourceRoot":""}