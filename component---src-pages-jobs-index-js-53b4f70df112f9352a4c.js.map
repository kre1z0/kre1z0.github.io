{"version":3,"sources":["webpack:///./src/components/HowWeAreWorking/styles.js","webpack:///./src/components/HowWeAreWorking/HowWeAreWorking.js","webpack:///./src/components/TeamMembers/TeamMembers.js","webpack:///./src/utils/number.js","webpack:///./src/styles/jobs.js","webpack:///./src/pages/jobs/index.js","webpack:///./src/components/HowWeAreWorking/Principle/styles.js","webpack:///./src/components/HowWeAreWorking/Principle/Principle.js"],"names":["HowWeAreWorkingContainer","styled","require","Title","Paragraph","HowWeAreWorking_styles","HowWeAreWorking","_ref","items","className","react_default","a","createElement","styles","howWeAreWorkingParagraph","Principle","GoNextLink","to","gatsby","howWeAreWorkingLink","PropTypes","object","string","TeamMembers","_PureComponent","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","cardHeight","photoHeight","onResize","Math","document","window","setState","inheritsLoose_default","_proto","prototype","componentDidMount","componentWillUnmount","render","newArray","firstCol","lastCol","n","min","max","_this$state","_this$props","props","id","isVacancy","isPhoto","data","slice","item","i","height","top","half","containerHeight","rateLimit","noVacancies","HowWeAreWorking_HowWeAreWorking","oneItem","style","NoVacancyCard","map","index","key","marginTop","marginBottom","src","alt","TeamMemberCard","Object","assign","control","longreadLink","avatar","vacancy","withMarginTop","margin","name","react","propTypes","defaultProps","Main","BackgroundWrapper","WillChange","LeftSide","Section","RightSide","RightSideContent","jobs","JobsBase","_Component","prevScrollTop","componentDidUpdate","prevTransitionEnd","transitionEnd","scrollTop","_this$props2","location","selectedSectionIndex","onSectionChange","onScrollableRef","onLeftSideSectionRef","status","routes","direction","sections","getRouteByLocation","section","transform","jobs_Main","Background","background","ref","animation","AdditionalMenu","menu","selectedId","leftSide","additionalMenu","isOpen","TeamMembers_TeamMembers","__webpack_exports__","MainLayoutProvider","layoutProps","jobs_JobsBase","Container","Item","Headlines","Description","Badge","Content","__webpack_require__","d","Principle_Principle","_ref$longread","longread","_ref2","icon","iconGreen","title","description","backgroundImage","itemClassName"],"mappings":"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","file":"component---src-pages-jobs-index-js-53b4f70df112f9352a4c.js","sourcesContent":["import styled from \"astroturf\"\n\nexport const HowWeAreWorkingContainer = styled(\"div\", null, \"HowWeAreWorkingContainer\", require(\"./styles-HowWeAreWorkingContainer.module.scss\"), \"how-we-are-working-container\", \"howWeAreWorkingContainer\");\n\nexport const Title = styled(\"h4\", null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const Paragraph = styled(\"p\", null, \"Paragraph\", require(\"./styles-Paragraph.module.scss\"), \"paragraph\", \"paragraph\");\n\nconst styles = require('./styles-styles.module.scss');\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { GoNextLink } from \"../../components/GoNextLink/GoNextLink\";\nimport { Principle } from \"./Principle/Principle\";\nimport styles, { HowWeAreWorkingContainer, Title, Paragraph } from \"./styles\";\n\nexport const HowWeAreWorking = ({ items, className }) => {\n  return (\n    <HowWeAreWorkingContainer className={className}>\n      <Title>Работа в Everpoint</Title>\n      <Paragraph className={styles.howWeAreWorkingParagraph}>\n        Более 15 лет мы разрабатываем геосервисы для наших заказчиков, а с 2018 года развиваем и\n        собственную геоинформационную систему EverGIS. Работа у нас — это всегда интересные задачи,\n        возможность проявить себя и поддержка коллектива. Будем рады видеть у себя в команде таких\n        же целеустремленных, активных и любознательных людей!\n      </Paragraph>\n      <Title>Важные компоненты нашего успеха</Title>\n      <Principle items={items} />\n      <GoNextLink to=\"/work\" gatsby className={styles.howWeAreWorkingLink}>\n        Подробнее о работе в Everpoint\n      </GoNextLink>\n    </HowWeAreWorkingContainer>\n  );\n};\n\nHowWeAreWorking.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  className: PropTypes.string,\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { rateLimit } from \"../../utils/number\";\nimport { NoVacancyCard } from \"./NoVacancyCard\";\nimport { GoNextLink } from \"../../components/GoNextLink/GoNextLink\";\nimport { TeamMemberCard } from \"../../components/TeamMemberCard/TeamMemberCard\";\nimport { TeamMembersContainer, PhotoContainer } from \"./styles\";\nimport { HowWeAreWorking } from \"../HowWeAreWorking/HowWeAreWorking\";\n\nfunction getColumns({ items }) {\n  const newArray = items.slice();\n\n  const firstCol = [];\n  const lastCol = [];\n  newArray.forEach((item, i) => (i % 2 ? lastCol.push(item) : firstCol.push(item)));\n  return firstCol.concat(lastCol);\n}\n\nexport class TeamMembers extends PureComponent {\n  static propTypes = {\n    items: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.object),\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n  };\n\n  state = {\n    cardHeight: 320,\n    photoHeight: 225,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.onResize);\n    this.onResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onResize);\n  }\n\n  static defaultProps = {\n    items: [],\n  };\n\n  onResize = () => {\n    const viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    if (viewportWidth <= 992) {\n      this.setState({ photoHeight: 164 });\n    } else {\n      this.setState({ photoHeight: 225 });\n    }\n  };\n\n  render() {\n    const { cardHeight, photoHeight } = this.state;\n    const margin = 30;\n    const { items, id } = this.props;\n    const isVacancy = id === \"vacancy\";\n    const isPhoto = id === \"photo\";\n    const data = getColumns({ items });\n    const height = isPhoto ? photoHeight : cardHeight;\n    const top = height / 2;\n    const half = Math.round(data.length / 2);\n    const containerHeight =\n      data.length > 2\n        ? Math.ceil(data.length / 2) * (height + margin) +\n          (data.length % 2 === 0 ? height / 2 : 0) +\n          4\n        : rateLimit(Math.ceil(data.length / 2), 1) * height + 4;\n\n    const noVacancies = isVacancy && items && items.length === 0;\n\n    if (id === \"process\") {\n      return (\n        <TeamMembersContainer>\n          <HowWeAreWorking items={items} />\n        </TeamMembersContainer>\n      );\n    }\n\n    return (\n      <TeamMembersContainer oneItem={data.length <= 1} style={{ height: containerHeight + \"px\" }}>\n        {noVacancies ? (\n          <NoVacancyCard />\n        ) : (\n          data.map((item, index) => {\n            if (isPhoto) {\n              const key = `photo-${index + 1}`;\n              return (\n                <PhotoContainer\n                  style={{ marginTop: index === half && top, height, marginBottom: margin }}\n                  key={key}\n                >\n                  <img src={item} alt={key} />\n                </PhotoContainer>\n              );\n            }\n\n            return (\n              <TeamMemberCard\n                control={\n                  isVacancy ? (\n                    <GoNextLink gatsby to={item.longreadLink}>\n                      Описание вакансии\n                    </GoNextLink>\n                  ) : null\n                }\n                avatar={item.avatar}\n                vacancy={isVacancy}\n                withMarginTop={index === half}\n                height={height}\n                top={top}\n                margin={margin}\n                key={`${item.name}-${index + 1}`}\n                {...item}\n              />\n            );\n          })\n        )}\n      </TeamMembersContainer>\n    );\n  }\n}\n","export function rateLimit(n, min, max) {\n  if (n < min) {\n    return min;\n  } else if (n > max) {\n    return max;\n  } else {\n    return n;\n  }\n}\n\nexport function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import styled from \"astroturf\"\n\nimport { Main as MainBlock } from \"../components/MainPageElements/Main\";\nimport { Side } from \"../components/MainPageElements/Section\";\n\nexport const Main = styled(MainBlock, null, \"Main\", require(\"./jobs-Main.module.scss\"), \"main\", \"main\");\n\nexport const BackgroundWrapper = styled(\"div\", null, \"BackgroundWrapper\", require(\"./jobs-BackgroundWrapper.module.scss\"), \"background-wrapper\", \"backgroundWrapper\");\n\nexport const WillChange = styled(\"div\", null, \"WillChange\", require(\"./jobs-WillChange.module.scss\"), \"will-change\", \"willChange\");\n\nexport const LeftSide = styled(Side, null, \"LeftSide\", require(\"./jobs-LeftSide.module.scss\"), \"left-side\", \"leftSide\");\n\nexport const RightSide = styled(Side, null, \"RightSide\", require(\"./jobs-RightSide.module.scss\"), \"right-side\", \"rightSide\");\n\nexport const RightSideContent = styled(\"div\", null, \"RightSideContent\", require(\"./jobs-RightSideContent.module.scss\"), \"right-side-content\", \"rightSideContent\");\n\nconst styles = require('./jobs-styles.module.scss');\n\nexport default styles;\n","import React, { Component } from \"react\";\n\nimport { Background } from \"../../components/MainPageElements/Background\";\nimport { MainLayoutConsumer } from \"../../components/MainLayoutProvider/MainLayoutProvider\";\nimport { AdditionalMenu } from \"../../components/AdditionalMenu/AdditionalMenu\";\nimport { TeamMembers } from \"../../components/TeamMembers/TeamMembers\";\nimport { getRouteByLocation } from \"../../routes/utils\";\nimport styles, {\n  Main,\n  BackgroundWrapper,\n  LeftSide,\n  RightSide,\n  RightSideContent,\n  WillChange,\n} from \"../../styles/jobs\";\nimport { animation } from \"../../components/MainPageElements/Section\";\n\nexport class JobsBase extends Component {\n  state = {\n    prevScrollTop: 0,\n  };\n\n  componentDidUpdate({ transitionEnd: prevTransitionEnd }, prevState) {\n    const { transitionEnd, scrollTop } = this.props;\n\n    if (prevTransitionEnd !== transitionEnd) {\n      this.setState({ prevScrollTop: scrollTop });\n    }\n  }\n\n  render() {\n    const { prevScrollTop } = this.state;\n    const {\n      location,\n      selectedSectionIndex,\n      onSectionChange,\n      onScrollableRef,\n      onLeftSideSectionRef,\n      transitionEnd,\n      scrollTop,\n      status,\n      routes,\n      direction,\n    } = this.props;\n    const currentRoute = getRouteByLocation(location, routes);\n    const { sections } = currentRoute;\n    const section = sections[selectedSectionIndex];\n\n    const transform = `translateY(${scrollTop}px)`;\n\n    return (\n      <Main>\n        <BackgroundWrapper style={{ transform }}>\n          <Background className={styles.background} status={status} location={location} />\n        </BackgroundWrapper>\n        <WillChange style={{ transform }} ref={onLeftSideSectionRef}>\n          <LeftSide className={animation(status, direction)}>\n            <AdditionalMenu\n              className={styles.menu}\n              selectedId={section && section.id}\n              onSectionChange={onSectionChange}\n              leftSide\n              additionalMenu={sections}\n              isOpen={true}\n            />\n          </LeftSide>\n        </WillChange>\n        <RightSide className={animation(status, direction)}>\n          <RightSideContent\n            ref={onScrollableRef}\n            style={{\n              transform: !transitionEnd && `translateY(-${prevScrollTop}px)`,\n            }}\n          >\n            {sections.map(item => (\n              <TeamMembers key={item.id} {...item} />\n            ))}\n          </RightSideContent>\n        </RightSide>\n      </Main>\n    );\n  }\n}\n\nconst Jobs = props => (\n  <MainLayoutConsumer>{layoutProps => <JobsBase {...props} {...layoutProps} />}</MainLayoutConsumer>\n);\n\nexport default Jobs;\n","import styled from \"astroturf\";\n\nimport { H4 } from \"../../../components/Typography/Headlines\";\n\nexport const Container = styled(\"div\", null, \"Container\", require(\"./styles-Container.module.scss\"), \"container\", \"container\");\n\nexport const Item = styled(\"article\", null, \"Item\", require(\"./styles-Item.module.scss\"), \"item\", \"item\");\n\nexport const Title = styled(H4, null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const Description = styled(\"p\", null, \"Description\", require(\"./styles-Description.module.scss\"), \"description\", \"description\");\n\nexport const Badge = styled(\"div\", null, \"Badge\", require(\"./styles-Badge.module.scss\"), \"badge\", \"badge\");\n\nexport const Content = styled(\"div\", null, \"Content\", require(\"./styles-Content.module.scss\"), \"content\", \"content\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Container, Item, Badge, Content, Title, Description } from \"./styles\";\n\nexport const Principle = ({ items, longread = false }) => (\n  <Container longread={longread}>\n    {items &&\n      items.map(({ icon, iconGreen, title, description }) => (\n        <Item key={title} longread={longread}>\n          <Badge\n            style={{ backgroundImage: `url(${longread ? iconGreen : icon})` }}\n            longread={longread}\n          />\n          <Content>\n            <Title longread={longread}>{title}</Title>\n            {longread && <Description>{description}</Description>}\n          </Content>\n        </Item>\n      ))}\n  </Container>\n);\n\nPrinciple.propTypes = {\n  itemClassName: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.object),\n};\n"],"sourceRoot":""}