{"version":3,"sources":["webpack:///./src/components/Pagination/Simple/styles.js","webpack:///./src/components/Pagination/Full/styles.js","webpack:///./src/components/Pagination/Full/PaginationFull.js","webpack:///./src/components/Pagination/Simple/PaginationSimple.js","webpack:///./src/utils/array.js","webpack:///./src/components/News/Header/styles.js","webpack:///./src/components/News/Header/Header.js","webpack:///./src/components/News/Article/styles.js","webpack:///./src/components/News/Article/Article.js","webpack:///./src/styles/news.js","webpack:///./src/pages/news/index.js","webpack:///./src/components/Elements/Article.js","webpack:///./src/components/Elements/Section.js","webpack:///./src/components/NewsCard/styles.js"],"names":["Container","styled","require","ControlBtn","Buttons","PrevBtn","NextBtn","Amount","Nav","Page","PaginationFull","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","midBlock","start","end","setDefaultMidBlockInterval","selected","slotCount","pageCount","midBlockInterval","Math","midBlockMaxPoint","midBlockDitance","setState","midBlockMinPoint","recalculateMidBlockInterval","handleLeftGapClick","currentPage","onPageChange","props","nextPage","handleRightGabClick","renderMidBlock","onPageClick","interval","from","_","i","map","el","react_default","a","createElement","key","onClick","showRightGap","showLeftGap","inheritsLoose_default","_proto","prototype","componentDidMount","_this$props","slots","componentDidUpdate","_this$props2","oddSlots","prevProps","render","_this2","_this$props3","className","prevPage","penultPage","dark","disabled","arrow","react","propTypes","PropTypes","number","isRequired","defaultProps","PaginationSimple","shouldComponentUpdate","nextCurrentPage","_ref","nextPageCount","e","string","rowColumns","array","columns","newArray","slice","col","reduce","p","c","Content","Hr","HorizontalRule","Title","Headlines","Header","title","styles_Container","Logo","PublishDate","NewsCard_styles","Description","Article_styles","Article","date","description","link","logo","Article_styles_Container","src","styles_Title","OutsideLink","href","styles","read","Section","Elements_Article","Column","styles_news","articlesPerPage","NewsBase","columnsCount","init","isMobile","allMarkdownRemark","data","AllNews","edges","news","pagination","page","to","scrollbar","items","window","_this$state","markdownRemark","Fragment","Header_Header","as","withoutPaddingBottom","news_Section","index","oneColumn","node","Article_Article","Object","assign","id","frontmatter","PaginationFull_PaginationFull","paginationFull","PaginationSimple_PaginationSimple","paginationSimple","PureComponent","__webpack_exports__","ScrollbarProvider","_ref2","news_NewsBase","newsPageQuery","__webpack_require__","d","astroturf__WEBPACK_IMPORTED_MODULE_0__","n","AboutCardContainer","Date","astroturf__WEBPACK_IMPORTED_MODULE_0___default","_Blank_Blank__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-news-index-js-5b50bcf7d969a81c1d79.js","sourcesContent":["import styled from \"astroturf\";\n\nimport { Button } from \"../../../components/Buttons/Buttons\";\n\nexport const Container = styled(\"nav\", null, \"Container\", require(\"./styles-Container.module.scss\"), \"container\", \"container\");\n\nconst ControlBtn = styled(Button, null, \"ControlBtn\", require(\"./styles-ControlBtn.module.scss\"), \"control-btn\", \"controlBtn\");\n\nexport const PrevBtn = styled(ControlBtn, null, \"PrevBtn\", require(\"./styles-PrevBtn.module.scss\"), \"prev-btn\", \"prevBtn\");\n\nexport const NextBtn = styled(ControlBtn, null, \"NextBtn\", require(\"./styles-NextBtn.module.scss\"), \"next-btn\", \"nextBtn\");\n\nexport const Amount = styled(\"span\", null, \"Amount\", require(\"./styles-Amount.module.scss\"), \"amount\", \"amount\");\n","import styled from \"astroturf\"\n\nexport const Nav = styled(\"nav\", null, \"Nav\", require(\"./styles-Nav.module.scss\"), \"nav\", \"nav\");\n\nexport const Page = styled(\"a\", null, \"Page\", require(\"./styles-Page.module.scss\"), \"page\", \"page\");\n\nconst styles = require('./styles-styles.module.scss');\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ReactComponent as Arrow } from \"../../../assets/img/icons/arrow.svg\";\nimport { PrevBtn, NextBtn } from \"../Simple/styles\";\nimport { Nav, Page } from \"./styles\";\n\nconst LEFT_GAP_MIN_PAGE_COUNT = 2;\nconst RIGHT_GAP_MIN_PAGE_COUNT = 3;\nconst MIDBLOCK_MIN_PAGE_COUNT = 4;\n\nexport class PaginationFull extends Component {\n  static propTypes = {\n    slots: PropTypes.number,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number,\n    pageCount: PropTypes.number,\n  };\n\n  static defaultProps = {\n    slots: 5,\n  };\n\n  state = {\n    midBlock: {\n      start: 0,\n      end: 0,\n    },\n  };\n\n  componentDidMount() {\n    const { currentPage, slots, pageCount } = this.props;\n    this.setDefaultMidBlockInterval(currentPage, slots, pageCount);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { currentPage, slots, pageCount } = this.props;\n    const oddSlots = slots % 2 === 0 ? slots - 1 : slots;\n    if (prevProps.currentPage !== currentPage) {\n      this.recalculateMidBlockInterval(currentPage, oddSlots, pageCount);\n    }\n  }\n\n  setDefaultMidBlockInterval = (selected, slotCount, pageCount) => {\n    slotCount = Math.max(slotCount % 2 === 0 ? slotCount - 1 : slotCount, 5);\n    const midBlockInterval = slotCount - 4;\n    const midBlockMaxPoint = pageCount - 2; // maximum number that midBlock could range\n    const midBlockMinPoint = 3; // minimum number that midBlock could range\n    const midBlockDitance = (midBlockInterval - 1) / 2; // distance to the middleBlock ends from the middle\n    if (selected < midBlockMinPoint) {\n      this.setState({\n        midBlock: {\n          start: midBlockMinPoint,\n          end: midBlockMinPoint + midBlockInterval - 1,\n        },\n      });\n      return;\n    } else if (selected > midBlockMaxPoint) {\n      this.setState({\n        midBlock: {\n          start: midBlockMaxPoint - midBlockInterval + 1,\n          end: midBlockMaxPoint,\n        },\n      });\n      return;\n    } else {\n      this.setState({\n        midBlock: {\n          start: Math.max(selected - midBlockDitance, midBlockMinPoint),\n          end: Math.min(selected + midBlockDitance, midBlockMaxPoint),\n        },\n      });\n    }\n  };\n\n  recalculateMidBlockInterval = (selected, slotCount, pageCount) => {\n    const { midBlock } = this.state;\n    const midBlockInterval = slotCount - 4; // 4 fixed positions\n    const midBlockMaxPoint = pageCount - 2; // maximum number that midBlock could range\n    const midBlockMinPoint = 3; // minimum number that midBlock could range\n    if (selected <= midBlockMinPoint) {\n      this.setState({\n        midBlock: {\n          start: midBlockMinPoint,\n          end: midBlockMinPoint + midBlockInterval - 1,\n        },\n      });\n      return;\n    } else if (selected >= midBlockMaxPoint) {\n      this.setState({\n        midBlock: {\n          start: pageCount - midBlockInterval - 1,\n          end: midBlockMaxPoint,\n        },\n      });\n      return;\n    } else if (selected < midBlock.start && selected > midBlockMinPoint) {\n      this.setState({\n        midBlock: {\n          start: Math.max(midBlock.start - midBlockInterval, midBlockMinPoint),\n          end: Math.min(midBlock.start - 1, midBlockMaxPoint),\n        },\n      });\n    } else if (selected > midBlock.end && selected < midBlockMaxPoint) {\n      this.setState({\n        midBlock: {\n          start: Math.min(midBlock.end + midBlockInterval, midBlockMaxPoint) - midBlockInterval + 1,\n          end: Math.min(midBlock.end + midBlockInterval, midBlockMaxPoint),\n        },\n      });\n    }\n  };\n\n  handleLeftGapClick = currentPage => {\n    const { midBlock } = this.state;\n    const { onPageChange } = this.props;\n\n    const nextPage =\n      currentPage > midBlock.end\n        ? midBlock.start - 1\n        : currentPage - (midBlock.end - midBlock.start + 1);\n    return onPageChange && onPageChange(Math.max(nextPage, 1));\n  };\n\n  handleRightGabClick = (currentPage, pageCount) => {\n    const { midBlock } = this.state;\n    const { onPageChange } = this.props;\n\n    const nextPage =\n      currentPage < midBlock.start\n        ? midBlock.end + 1\n        : currentPage + (midBlock.end - midBlock.start + 1);\n    return onPageChange && onPageChange(Math.min(nextPage, pageCount));\n  };\n\n  renderMidBlock = (selected, onPageClick) => {\n    const { midBlock } = this.state;\n    const interval = midBlock.end - midBlock.start + 1;\n    return Array.from({ length: interval }, (_, i) => midBlock.start + i).map(el => (\n      <Page key={el} selected={selected === el} onClick={() => onPageClick && onPageClick(el)}>\n        {el}\n      </Page>\n    ));\n  };\n  showRightGap = pageCount => {\n    const minPage = 5; // min pages count to show right gap\n    const midBlockMaxPoint = pageCount - 2;\n    return pageCount > minPage && this.state.midBlock.end < midBlockMaxPoint;\n  };\n\n  showLeftGap = () => this.state.midBlock.start > 3;\n\n  render() {\n    const { currentPage, pageCount, onPageChange, className } = this.props;\n    const { midBlock } = this.state;\n    const nextPage = currentPage + 1;\n    const prevPage = currentPage - 1;\n    const penultPage = pageCount - 1;\n\n    return (\n      <Nav className={className}>\n        <PrevBtn\n          dark\n          disabled={currentPage <= 1}\n          onClick={() => currentPage > 1 && onPageChange && onPageChange(prevPage)}\n        >\n          <Arrow />\n        </PrevBtn>\n        <Page selected={currentPage === 1} onClick={() => onPageChange && onPageChange(1)}>\n          1\n        </Page>\n        {this.showLeftGap() ? (\n          <Page\n            selected={false}\n            onClick={() =>\n              midBlock.start === 3\n                ? onPageChange && onPageChange(2)\n                : this.handleLeftGapClick(currentPage)\n            }\n          >\n            ...\n          </Page>\n        ) : (\n          pageCount > LEFT_GAP_MIN_PAGE_COUNT && (\n            <Page\n              selected={currentPage === LEFT_GAP_MIN_PAGE_COUNT}\n              onClick={() => onPageChange && onPageChange(LEFT_GAP_MIN_PAGE_COUNT)}\n            >\n              2\n            </Page>\n          )\n        )}\n        {pageCount > MIDBLOCK_MIN_PAGE_COUNT && this.renderMidBlock(currentPage, onPageChange)}\n        {this.showRightGap(pageCount) ? (\n          <Page selected={false} onClick={() => this.handleRightGabClick(currentPage, pageCount)}>\n            ...\n          </Page>\n        ) : (\n          pageCount > RIGHT_GAP_MIN_PAGE_COUNT && (\n            <Page\n              selected={currentPage === penultPage}\n              onClick={() => onPageChange && onPageChange(penultPage)}\n            >\n              {penultPage}\n            </Page>\n          )\n        )}\n        <Page\n          selected={currentPage === pageCount}\n          onClick={() => onPageChange && onPageChange(pageCount)}\n        >\n          {pageCount}\n        </Page>\n        <NextBtn\n          dark\n          disabled={currentPage >= pageCount}\n          onClick={() => currentPage < pageCount && onPageChange && onPageChange(nextPage)}\n        >\n          <Arrow />\n        </NextBtn>\n      </Nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ReactComponent as Arrow } from \"../../../assets/img/icons/arrow.svg\";\nimport { Container, PrevBtn, NextBtn, Amount } from \"./styles\";\n\nexport class PaginationSimple extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    currentPage: PropTypes.number,\n    pageCount: PropTypes.number,\n    onPageChange: PropTypes.func.isRequired,\n  };\n\n  shouldComponentUpdate({ currentPage: nextCurrentPage, pageCount: nextPageCount }) {\n    const { currentPage, pageCount } = this.props;\n\n    return currentPage !== nextCurrentPage || pageCount !== nextPageCount;\n  }\n\n  render() {\n    const { pageCount, currentPage, className, onPageChange } = this.props;\n\n    return (\n      <Container className={className}>\n        <PrevBtn onClick={e => onPageChange(currentPage - 1, e)} disabled={currentPage === 1}>\n          <Arrow />\n        </PrevBtn>\n        <Amount>{`${currentPage} / ${pageCount}`}</Amount>\n        <NextBtn\n          onClick={e => onPageChange(currentPage + 1, e)}\n          disabled={currentPage === pageCount}\n        >\n          <Arrow />\n        </NextBtn>\n      </Container>\n    );\n  }\n}\n","export const rowColumns = (array, columns) => {\n  const newArray = array.slice();\n\n  const col = [];\n\n  for (let i = 0; i < columns; i++) {\n    col.push([]);\n  }\n\n  return newArray.reduce((p, c, i) => {\n    p[i % columns].push(c);\n    return p;\n  }, col);\n};\n","import styled from \"astroturf\";\n\nimport { HorizontalRule } from \"../../../components/Typography/HorizontalRule\";\nimport { BigH1 } from \"../../../components/Typography/Headlines\";\n\nexport const Container = styled(\"header\", null, \"Container\", require(\"./styles-Container.module.scss\"), \"container\", \"container\");\n\nexport const Content = styled(\"div\", null, \"Content\", require(\"./styles-Content.module.scss\"), \"content\", \"content\");\n\nexport const Hr = styled(HorizontalRule, null, \"Hr\", require(\"./styles-Hr.module.scss\"), \"hr\", \"hr\");\n\nexport const Title = styled(BigH1, null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Container, Content, Title, Hr } from \"./styles\";\n\nexport const Header = ({ title }) => {\n  return (\n    <Container>\n      <Content>\n        <Hr />\n        <Title>{title}</Title>\n      </Content>\n    </Container>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from \"astroturf\"\n\nimport { Date } from \"../../../components/NewsCard/styles\";\n\nexport const Container = styled(\"article\", null, \"Container\", require(\"./styles-Container.module.scss\"), \"container\", \"container\");\n\nexport const Logo = styled(\"img\", null, \"Logo\", require(\"./styles-Logo.module.scss\"), \"logo\", \"logo\");\n\nexport const Title = styled(\"h2\", null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const PublishDate = styled(Date, null, \"PublishDate\", require(\"./styles-PublishDate.module.scss\"), \"publish-date\", \"publishDate\");\n\nexport const Description = styled(\"p\", null, \"Description\", require(\"./styles-Description.module.scss\"), \"description\", \"description\");\n\nconst styles = require('./styles-styles.module.scss');\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { OutsideLink } from \"../../../components/OutsideLink/OutsideLink\";\nimport styles, { Container, Logo, Title, PublishDate, Description } from \"./styles\";\n\nexport const Article = ({ date, description, link, logo, title }) => {\n  return (\n    <Container>\n      <Logo src={logo} />\n      <Title>{title}</Title>\n      <PublishDate>{date}</PublishDate>\n      <Description>{description}</Description>\n      <OutsideLink href={link} className={styles.read}>\n        Читать\n      </OutsideLink>\n    </Container>\n  );\n};\n\nArticle.propTypes = {\n  date: PropTypes.string,\n  description: PropTypes.string,\n  link: PropTypes.string,\n  logo: PropTypes.string,\n  title: PropTypes.string,\n};\n","import styled from \"astroturf\"\n\nimport { Article } from \"../components/Elements/Article\";\n\nexport const Section = styled(Article, null, \"Section\", require(\"./news-Section.module.scss\"), \"section\", \"section\");\n\nexport const Column = styled(\"div\", null, \"Column\", require(\"./news-Column.module.scss\"), \"column\", \"column\");\n\nconst styles = require('./news-styles.module.scss');\n\nexport default styles;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\n\nimport { ScrollbarConsumer } from \"../../components/ScrollbarProvider/ScrollbarProvider\";\nimport { PaginationFull } from \"../../components/Pagination/Full/PaginationFull\";\nimport { PaginationSimple } from \"../../components/Pagination/Simple/PaginationSimple\";\nimport { isMobile } from \"../../utils/browser\";\nimport { rowColumns } from \"../../utils/array\";\nimport { H2 } from \"../../components/Typography/Headlines\";\nimport { Section as Main } from \"../../components/Elements/Section\";\nimport { Header } from \"../../components/News/Header/Header\";\nimport { Article } from \"../../components/News/Article/Article\";\nimport styles, { Section, Column } from \"../../styles/news\";\n\nconst articlesPerPage = 8;\n\nclass NewsBase extends PureComponent {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n  };\n\n  state = {\n    columnsCount: 2,\n    currentPage: 1,\n    columns: [],\n    pageCount: 0,\n  };\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init = () => {\n    const columnsCount = isMobile() ? 1 : 2;\n    const { currentPage } = this.state;\n    const { data } = this.props;\n    const allMarkdownRemark = data.allMarkdownRemark;\n    const AllNews = allMarkdownRemark ? allMarkdownRemark.edges : [];\n\n    const news = this.pagination(currentPage);\n    const pageCount = Math.ceil(AllNews.length / articlesPerPage);\n    const columns = rowColumns(news, columnsCount);\n\n    this.setState({ pageCount, columns, columnsCount });\n  };\n\n  pagination = page => {\n    const { data } = this.props;\n    const allMarkdownRemark = data.allMarkdownRemark;\n    const AllNews = allMarkdownRemark ? allMarkdownRemark.edges : [];\n\n    const from = articlesPerPage * (page - 1);\n    const to = from + articlesPerPage;\n\n    return AllNews.slice(from, to);\n  };\n\n  onPageChange = currentPage => {\n    const { columnsCount } = this.state;\n    const { scrollbar } = this.props;\n\n    const items = this.pagination(currentPage);\n    const columns = rowColumns(items, columnsCount);\n\n    this.setState(\n      {\n        currentPage,\n        columns,\n      },\n      () => {\n        if (scrollbar) {\n          scrollbar.scrollTo(0, 0, 0);\n        } else {\n          window.scrollTo(0, 0);\n        }\n      },\n    );\n  };\n\n  render() {\n    const { columnsCount, columns, currentPage, pageCount } = this.state;\n    const { data } = this.props;\n    const allMarkdownRemark = data.allMarkdownRemark;\n    const markdownRemark = data.markdownRemark;\n\n    return (\n      <>\n        <Header title={markdownRemark && markdownRemark.frontmatter.title} />\n        <Main as=\"main\" withoutPaddingBottom>\n          <Section as=\"section\">\n            {!allMarkdownRemark && <H2>Список статей пуст</H2>}\n            {columns.map((col, index) => (\n              <Column key={index} oneColumn={columnsCount === 1}>\n                {!allMarkdownRemark && <H2>Список статей пуст</H2>}\n                {col.map(({ node }) => (\n                  <Article key={node.id} {...node.frontmatter} />\n                ))}\n              </Column>\n            ))}\n          </Section>\n          {pageCount > 1 && (\n            <>\n              <PaginationFull\n                className={styles.paginationFull}\n                currentPage={currentPage}\n                pageCount={pageCount}\n                slots={7}\n                onPageChange={this.onPageChange}\n              />\n              <PaginationSimple\n                pageCount={pageCount}\n                currentPage={currentPage}\n                onPageChange={this.onPageChange}\n                className={styles.paginationSimple}\n              />\n            </>\n          )}\n        </Main>\n      </>\n    );\n  }\n}\n\nconst News = props => (\n  <ScrollbarConsumer>\n    {({ scrollbar }) => <NewsBase scrollbar={scrollbar} {...props} />}\n  </ScrollbarConsumer>\n);\n\nexport default News;\n\nexport const newsPageQuery = graphql`\n  query AllNews {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: [DESC] }\n      filter: { frontmatter: { templateKey: { eq: \"about\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            logo\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            description\n            link\n          }\n        }\n      }\n    }\n    markdownRemark(frontmatter: { templateKey: { eq: \"about-page\" } }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","import styled from \"astroturf\";\n\nexport const Article = styled(\"article\", null, \"Article\", require(\"./Article.module.scss\"), \"article\", \"article\");\n","import styled from \"astroturf\";\n\nexport const Section = styled(\"section\", null, \"Section\", require(\"./Section.module.scss\"), \"section\", \"section\");","import styled from \"astroturf\"\nimport { Blank } from \"../Blank/Blank\";\n\nexport const AboutCardContainer = styled(Blank, null, \"AboutCardContainer\", require(\"./styles-AboutCardContainer.module.scss\"), \"about-card-container\", \"aboutCardContainer\");\n\nexport const Title = styled(\"h4\", null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const Date = styled(\"span\", null, \"Date\", require(\"./styles-Date.module.scss\"), \"date\", \"date\");\n\nexport const Description = styled(\"p\", null, \"Description\", require(\"./styles-Description.module.scss\"), \"description\", \"description\");\n\nexport const Logo = styled(\"img\", null, \"Logo\", require(\"./styles-Logo.module.scss\"), \"logo\", \"logo\");\n\nconst styles = require('./styles-styles.module.scss');\n\nexport default styles;\n"],"sourceRoot":""}