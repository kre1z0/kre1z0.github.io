{"version":3,"sources":["webpack:///./src/components/PortfolioSlide/styles.js","webpack:///./src/components/PortfolioSlide/MultiScreenshots.js","webpack:///./src/components/PortfolioSlide/Screenshoots.js","webpack:///./src/components/PortfolioSlide/Content.js","webpack:///./src/components/PortfolioSlide/TransitionSlide.js","webpack:///./src/components/PortfolioSlide/PortfolioSlide.js","webpack:///./src/styles/portfolio.js","webpack:///./src/pages/portfolio/index.js","webpack:///./src/styles/transition.js"],"names":["ContainerTransitionGroup","styled","react_transition_group","require","PortfolioSlideContainer","SliderBackground","Title","Description","Content","MobileTitle","ScreenshotTransitionGroup","Screenshot","LongreadBackground","transitionScroll","slideUpScroll","slideDownScroll","MultiScreenshotsContainer","MultiScreenshots","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","imagesIsLoaded","inheritsLoose_default","prototype","render","_this2","screenshots","props","react_default","a","createElement","ImagesDownloadListener","images","onLoad","setState","map","img","index","key","src","alt","react","propTypes","PropTypes","Screenshoots","_this$props","isNext","text","status","classNames","direction","screenshotSlideUp","screenshotSlideDown","scrollScreenshotTransitionNext","scrollScreenshotTransition","isArray","MultiScreenshots_MultiScreenshots","className","cn","bool","description","title","styles_Content","slideUp","slideDown","fade","transition","as","GoNextLink","white","string","number","TransitionSlide","flag","hovered","getDerivedStateFromProps","nextProps","prevState","id","projectBackgroundColor","_this$state","nextId","goToLongread","onContainerRef","sectionDirection","up","down","transitionEnd","onResize","onExited","nextSlide","scrollDown","transitionUp","entering","transform","exiting","scrollClassNames","style","Object","assign","willChange","onClick","ref","onMouseOver","onMouseOut","onTransitionEnd","e","background","Screenshoots_Screenshoots","Content_Content","func","selectedSectionIndex","sections","object","PortfolioSlide","top","left","width","height","getSlideBoundingClientRect","slide","_this$slide$getBoundi","getBoundingClientRect","topRect","leftRect","bottom","window","scrollY","scrollX","Math","setImages","ratio","_ref","item","_this$props2","navigate","setTimeout","debounce","_proto","componentDidMount","componentWillUnmount","getSnapshotBeforeUpdate","componentDidUpdate","prevTransitionEnd","_ref2","snapshot","_this$props3","sectionImages","Fragment","timeout","enter","exit","TransitionSlide_TransitionSlide","Portal","onSectionChange","parentTitle","lastSectionIndex","Main","LeftSide","Section","Rightside","portfolio","PortfolioBase","location","isPortfolioPage","disableBackgroundTransition","routes","getRouteByLocation","section","portfolio_Main","Background","common","russiaBackground","transitionDuration","animation","AdditionalMenu","styles","menu","selectedId","leftSide","additionalMenu","isOpen","PortfolioSlide_PortfolioSlide","getPixelRatioPropName","Component","PortfolioWithLayout","MainLayoutProvider","layoutProps","portfolio_PortfolioBase","Portfolio","withRouter","portfolio_PortfolioWithLayout","__webpack_exports__","__webpack_require__","d"],"mappings":"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","file":"component---src-pages-portfolio-index-js-c4b855bb35baf3a86fc1.js","sourcesContent":["import styled from \"astroturf\"\nimport { TransitionGroup } from \"react-transition-group\";\n\nexport const ContainerTransitionGroup = styled(TransitionGroup, null, \"ContainerTransitionGroup\", require(\"./styles-ContainerTransitionGroup.module.scss\"), \"container-transition-group\", \"containerTransitionGroup\");\n\nexport const PortfolioSlideContainer = styled(\"div\", null, \"PortfolioSlideContainer\", require(\"./styles-PortfolioSlideContainer.module.scss\"), \"portfolio-slide-container\", \"portfolioSlideContainer\");\n\nexport const SliderBackground = styled(\"div\", null, \"SliderBackground\", require(\"./styles-SliderBackground.module.scss\"), \"slider-background\", \"sliderBackground\");\n\nexport const Title = styled(\"h2\", null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const Description = styled(\"p\", null, \"Description\", require(\"./styles-Description.module.scss\"), \"description\", \"description\");\n\nexport const Content = styled(\"div\", null, \"Content\", require(\"./styles-Content.module.scss\"), \"content\", \"content\");\n\nexport const MobileTitle = styled(\"h1\", null, \"MobileTitle\", require(\"./styles-MobileTitle.module.scss\"), \"mobile-title\", \"mobileTitle\");\n\nexport const ScreenshotTransitionGroup = styled(\"div\", null, \"ScreenshotTransitionGroup\", require(\"./styles-ScreenshotTransitionGroup.module.scss\"), \"screenshot-transition-group\", \"screenshotTransitionGroup\");\n\nexport const Screenshot = styled(\"img\", null, \"Screenshot\", require(\"./styles-Screenshot.module.scss\"), \"screenshot\", \"screenshot\");\n\nexport const LongreadBackground = styled(\"div\", null, \"LongreadBackground\", require(\"./styles-LongreadBackground.module.scss\"), \"longread-background\", \"longreadBackground\");\n\nexport const transitionScroll = require('./styles-transitionScroll.module.scss');\n\nexport const slideUpScroll = require('./styles-slideUpScroll.module.scss');\n\nexport const slideDownScroll = require('./styles-slideDownScroll.module.scss');\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"astroturf\";\n\nimport { ImagesDownloadListener } from \"../../components/ImagesDownloadListener/ImagesDownloadListener\";\n\nconst MultiScreenshotsContainer = styled(\"div\", null, \"MultiScreenshotsContainer\", require(\"./MultiScreenshots-MultiScreenshotsContainer.module.scss\"), \"multi-screenshots-container\", \"multiScreenshotsContainer\");\n\nexport class MultiScreenshots extends Component {\n  static propTypes = {\n    screenshots: PropTypes.arrayOf(PropTypes.string),\n  };\n\n  state = {\n    imagesIsLoaded: false,\n  };\n\n  render() {\n    const { imagesIsLoaded } = this.state;\n    const { screenshots } = this.props;\n\n    return (\n      <MultiScreenshotsContainer {...this.props}>\n        <ImagesDownloadListener\n          images={screenshots}\n          onLoad={() => this.setState({ imagesIsLoaded: true })}\n        />\n        {imagesIsLoaded &&\n          screenshots.map((img, index) => (\n            <img key={`img-${index}`} src={img} alt={`img-${index}`} />\n          ))}\n      </MultiScreenshotsContainer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport { MultiScreenshots } from \"./MultiScreenshots\";\n\nimport { ScreenshotTransitionGroup, Screenshot } from \"./styles\";\nimport {\n  screenshotSlideUp,\n  screenshotSlideDown,\n  scrollScreenshotTransition,\n  scrollScreenshotTransitionNext,\n} from \"../../styles/transition\";\n\nexport class Screenshoots extends Component {\n  static propTypes = {\n    isNext: PropTypes.bool,\n  };\n\n  render() {\n    const { screenshots, isNext, text, status, direction } = this.props;\n    const slideY = direction > 0 ? screenshotSlideUp[status] : screenshotSlideDown[status];\n\n    const classNames = [\n      slideY,\n      isNext ? scrollScreenshotTransitionNext[status] : scrollScreenshotTransition[status],\n    ];\n\n    return (\n      <ScreenshotTransitionGroup>\n        {Array.isArray(screenshots) ? (\n          <MultiScreenshots className={cn(...classNames)} alt={text} screenshots={screenshots} />\n        ) : (\n          <Screenshot className={cn(...classNames)} src={screenshots} alt={text} />\n        )}\n      </ScreenshotTransitionGroup>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport { GoNextLink } from \"../../components/GoNextLink/GoNextLink\";\nimport { Content as ContentBlock, Description, Title } from \"./styles\";\n\nimport { transition, slideDown, slideUp, fade } from \"../../styles/transition\";\n\nexport class Content extends Component {\n  static propTypes = {\n    text: PropTypes.string,\n    description: PropTypes.string,\n    direction: PropTypes.number,\n    title: PropTypes.string,\n    status: PropTypes.string,\n  };\n\n  render() {\n    const { status, direction, description, title, text } = this.props;\n\n    return (\n      <ContentBlock\n        className={cn(\n          direction > 0 ? slideUp[status] : slideDown[status],\n          fade[status],\n          transition[status],\n        )}\n      >\n        <Title as=\"h2\">{title || text}</Title>\n        <Description>\n          {description ||\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam eaque eligendi iusto labore nisi quas.\"}\n        </Description>\n        <GoNextLink white>Подробнее</GoNextLink>\n      </ContentBlock>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport { fade } from \"../../styles/transition\";\nimport {\n  PortfolioSlideContainer,\n  SliderBackground,\n  transitionScroll,\n  slideUpScroll,\n  slideDownScroll,\n} from \"./styles\";\nimport { Screenshoots } from \"./Screenshoots\";\nimport { Content } from \"./Content\";\n\nexport class TransitionSlide extends Component {\n  static propTypes = {\n    goToLongread: PropTypes.func,\n    onContainerRef: PropTypes.func,\n    selectedSectionIndex: PropTypes.number,\n    sections: PropTypes.arrayOf(PropTypes.object),\n    up: PropTypes.number,\n    down: PropTypes.number,\n    transitionEnd: PropTypes.bool,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { description, id, title, text, images, projectBackgroundColor } = nextProps;\n    const { flag } = prevState;\n\n    if (!flag) {\n      return {\n        flag: true,\n        projectBackgroundColor,\n        images,\n        id,\n        description,\n        title,\n        text,\n      };\n    }\n\n    return null;\n  }\n\n  state = {\n    flag: false,\n    hovered: false,\n  };\n\n  render() {\n    const { id, description, title, text, images, projectBackgroundColor, hovered } = this.state;\n    const {\n      id: nextId,\n      goToLongread,\n      onContainerRef,\n      sectionDirection,\n      status,\n      up,\n      down,\n      transitionEnd,\n      onResize,\n      onExited,\n    } = this.props;\n\n    const nextSlide = id === nextId;\n\n    const scrollDown = sectionDirection > 0;\n\n    const transitionUp = scrollDown\n      ? {\n          entering: { transform: `translateY(${down}px)` },\n          exiting: { transform: `translateY(-${down}px)` },\n        }\n      : {\n          entering: { transform: `translateY(-${up}px)` },\n          exiting: { transform: `translateY(${up}px)` },\n        };\n\n    const scrollClassNames = [\n      scrollDown ? slideUpScroll[status] : slideDownScroll[status],\n      !nextSlide && fade[status],\n      transitionScroll[status],\n    ];\n\n    return (\n      <PortfolioSlideContainer\n        style={{\n          ...transitionUp[status],\n        }}\n        className={cn(...scrollClassNames)}\n        willChange={transitionEnd}\n        onClick={goToLongread}\n        ref={onContainerRef}\n        onMouseOver={() => this.setState({ hovered: true })}\n        onMouseOut={() => this.setState({ hovered: false })}\n        onTransitionEnd={e => {\n          if (e.propertyName === \"transform\" && e.elapsedTime >= 0.4) {\n            onResize();\n            onExited();\n          }\n        }}\n      >\n        <SliderBackground\n          hovered={hovered}\n          style={{\n            background: projectBackgroundColor,\n          }}\n        />\n        <Screenshoots\n          isNext={nextSlide}\n          status={status}\n          direction={sectionDirection}\n          text={text}\n          screenshots={images}\n        />\n        <Content\n          status={status}\n          direction={sectionDirection}\n          title={title}\n          text={text}\n          description={description}\n        />\n      </PortfolioSlideContainer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport debounce from \"lodash/debounce\";\nimport { Transition } from \"react-transition-group\";\n\nimport { ImagesDownloadListener } from \"../../components/ImagesDownloadListener/ImagesDownloadListener\";\nimport { ContainerTransitionGroup, LongreadBackground } from \"./styles\";\nimport { TransitionSlide } from \"./TransitionSlide\";\nimport { Portal } from \"../../components/Portal/Portal\";\n\nexport class PortfolioSlide extends Component {\n  static propTypes = {\n    projectBackgroundColor: PropTypes.string,\n    text: PropTypes.string,\n    description: PropTypes.string,\n    screenshots: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.object]),\n    id: PropTypes.string,\n    onSectionChange: PropTypes.func,\n    selectedSectionIndex: PropTypes.number,\n    sections: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n    parentTitle: PropTypes.string,\n    sectionDirection: PropTypes.number,\n    navigate: PropTypes.func,\n    transitionEnd: PropTypes.bool,\n    direction: PropTypes.number,\n    lastSectionIndex: PropTypes.number,\n    onExited: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onResize = debounce(this.onResize, 200);\n  }\n\n  state = {\n    id: null,\n    goToLongread: false,\n    images: [],\n\n    top: 0,\n    up: 0,\n    down: 0,\n    left: 0,\n    width: 0,\n    height: 0,\n  };\n\n  componentDidMount() {\n    this.onResize();\n    this.setImages();\n    window.addEventListener(\"resize\", this.onResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onResize);\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return this.getSlideBoundingClientRect();\n  }\n\n  componentDidUpdate({ transitionEnd: prevTransitionEnd }, prevState, snapshot) {\n    const { transitionEnd } = this.props;\n\n    if (prevTransitionEnd !== transitionEnd && transitionEnd) {\n      this.setState(snapshot);\n    }\n  }\n\n  onResize = () => this.setState(this.getSlideBoundingClientRect());\n\n  getSlideBoundingClientRect = () => {\n    if (this.slide) {\n      const {\n        top: topRect,\n        left: leftRect,\n        width,\n        height,\n        bottom,\n      } = this.slide.getBoundingClientRect();\n\n      const top = topRect + window.scrollY;\n      const left = leftRect + window.scrollX;\n\n      return {\n        top: Math.round(top),\n        left: Math.round(left),\n        width: Math.round(width),\n        height: Math.round(height),\n        up: Math.round(top + height),\n        down: Math.round(window.innerHeight - bottom + height),\n      };\n    }\n  };\n\n  setImages = () => {\n    const { sections, ratio } = this.props;\n\n    const images = [];\n\n    sections.forEach(({ screenshots }) => {\n      if (Array.isArray(screenshots)) {\n        screenshots.forEach(item => images.push(item[ratio]));\n      } else {\n        images.push(screenshots[ratio]);\n      }\n    });\n\n    this.setState({ images });\n  };\n\n  goToLongread = () => {\n    const { navigate, id } = this.props;\n    this.setState(\n      {\n        goToLongread: true,\n      },\n      () => {\n        setTimeout(() => {\n          navigate(`/${id}`);\n        }, 200);\n      },\n    );\n  };\n\n  onContainerRef = ref => {\n    if (ref) {\n      this.slide = ref;\n    }\n  };\n\n  render() {\n    const { top, down, up, left, width, height, goToLongread, images } = this.state;\n    const { projectBackgroundColor, id, screenshots, ratio } = this.props;\n\n    const sectionImages = Array.isArray(screenshots)\n      ? screenshots.map(img => img[ratio])\n      : screenshots[ratio];\n\n    return (\n      <>\n        <ImagesDownloadListener images={images} />\n        <ContainerTransitionGroup>\n          <Transition\n            key={`${id}-portfolio-slide-animation`}\n            timeout={{\n              enter: 0,\n              exit: 400,\n            }}\n          >\n            {status => (\n              <TransitionSlide\n                {...this.props}\n                status={status}\n                onResize={this.onResize}\n                onContainerRef={this.onContainerRef}\n                goToLongread={this.goToLongread}\n                images={sectionImages}\n                up={up}\n                down={down}\n              />\n            )}\n          </Transition>\n        </ContainerTransitionGroup>\n        {typeof window !== \"undefined\" && (\n          <Portal>\n            <LongreadBackground\n              goToLongread={goToLongread}\n              style={{\n                background: projectBackgroundColor,\n                top: goToLongread ? 0 : top,\n                left: goToLongread ? 0 : left,\n                width: goToLongread ? \"100vw\" : width,\n                height: goToLongread ? \"100vh\" : height,\n              }}\n            />\n          </Portal>\n        )}\n      </>\n    );\n  }\n}\n","import styled from \"astroturf\"\n\nimport { Main as MainBlock } from \"../components/MainPageElements/Main\";\nimport { Side } from \"../components/MainPageElements/Section\";\n\nexport const Main = styled(MainBlock, null, \"Main\", require(\"./portfolio-Main.module.scss\"), \"main\", \"main\");\n\nexport const LeftSide = styled(Side, null, \"LeftSide\", require(\"./portfolio-LeftSide.module.scss\"), \"left-side\", \"leftSide\");\n\nexport const Rightside = styled(Side, null, \"Rightside\", require(\"./portfolio-Rightside.module.scss\"), \"rightside\", \"rightside\");\n\nconst styles = require('./portfolio-styles.module.scss');\n\nexport default styles;\n","import React, { Component } from \"react\";\n\nimport { Background } from \"../../components/MainPageElements/Background\";\nimport { MainLayoutConsumer } from \"../../components/MainLayoutProvider/MainLayoutProvider\";\nimport { getRouteByLocation } from \"../../routes/utils\";\nimport { AdditionalMenu } from \"../../components/AdditionalMenu/AdditionalMenu\";\nimport { PortfolioSlide } from \"../../components/PortfolioSlide/PortfolioSlide\";\nimport styles, { Main, LeftSide, Rightside } from \"../../styles/portfolio\";\nimport { MobileTitle } from \"../../components/PortfolioSlide/styles\";\nimport { common } from \"../../styles/common\";\nimport withRouter from \"../../hoc/withRouter\";\nimport { animation } from \"../../components/MainPageElements/Section\";\nimport { getPixelRatioPropName } from \"../../utils/utils\";\n\nclass PortfolioBase extends Component {\n  render() {\n    const {\n      location,\n      navigate,\n      isPortfolioPage,\n      selectedSectionIndex,\n      onSectionChange,\n      sectionDirection,\n      transitionEnd,\n      direction,\n      status,\n      disableBackgroundTransition,\n      lastSectionIndex,\n      onExited,\n      routes,\n    } = this.props;\n    const currentRoute = getRouteByLocation(location, routes);\n    const { sections } = currentRoute;\n    const section = sections[lastSectionIndex || selectedSectionIndex];\n\n    return (\n      <Main>\n        <Background\n          className={common.russiaBackground}\n          style={{ transitionDuration: disableBackgroundTransition && \"20ms\" }}\n          status={status}\n          location={location}\n        />\n        <LeftSide className={animation(status, direction)}>\n          <MobileTitle>{section && section.parentTitle}</MobileTitle>\n          <AdditionalMenu\n            isPortfolioPage={isPortfolioPage()}\n            className={styles.menu}\n            selectedId={section && section.id}\n            onSectionChange={onSectionChange}\n            leftSide\n            additionalMenu={sections}\n            isOpen={true}\n          />\n        </LeftSide>\n        <Rightside className={animation(status, direction)}>\n          <PortfolioSlide\n            ratio={getPixelRatioPropName()}\n            onExited={onExited}\n            lastSectionIndex={lastSectionIndex}\n            transitionEnd={transitionEnd}\n            sectionDirection={sectionDirection}\n            direction={direction}\n            sections={sections}\n            selectedSectionIndex={selectedSectionIndex}\n            onSectionChange={onSectionChange}\n            navigate={navigate}\n            {...section}\n          />\n        </Rightside>\n      </Main>\n    );\n  }\n}\n\nexport const PortfolioWithLayout = props => (\n  <MainLayoutConsumer>\n    {layoutProps => <PortfolioBase {...props} {...layoutProps} />}\n  </MainLayoutConsumer>\n);\n\nconst Portfolio = withRouter(PortfolioWithLayout);\n\nexport default Portfolio;\n","\n\nexport const transition = require('./transition-transition.module.scss');\n\nexport const fade = require('./transition-fade.module.scss');\n\nexport const slideUp = require('./transition-slideUp.module.scss');\n\nexport const slideDown = require('./transition-slideDown.module.scss');\n\nexport const slideLeft = require('./transition-slideLeft.module.scss');\n\nexport const slideRight = require('./transition-slideRight.module.scss');\n\nexport const scrollScreenshotTransition = require('./transition-scrollScreenshotTransition.module.scss');\n\nexport const scrollScreenshotTransitionNext = require('./transition-scrollScreenshotTransitionNext.module.scss');\n\nexport const screenshotSlideUp = require('./transition-screenshotSlideUp.module.scss');\n\nexport const screenshotSlideDown = require('./transition-screenshotSlideDown.module.scss');\n"],"sourceRoot":""}