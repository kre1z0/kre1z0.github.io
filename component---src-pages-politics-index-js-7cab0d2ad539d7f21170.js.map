{"version":3,"sources":["webpack:///./src/styles/politics.js","webpack:///./src/pages/politics/index.js","webpack:///./src/components/Elements/Article.js","webpack:///./src/cms/common/Content.js","webpack:///./src/styles/typography.js"],"names":["PoliticsContainer","styled","Article","require","MainTitle","Headlines","Introduction","SubTitle","City","Block","UpdateDate","Politics","react_default","a","memo","props","title","city","introduction","blocks","updateDate","IntroductionContent","isReactElement","Content","createElement","as","className","styles","typography","Element","content","map","_ref","index","block","BlockElement","key","politicsPageQuery","__webpack_exports__","_ref2","data","objectWithoutPropertiesLoose_default","normalizedData","frontmatter","Object","assign","__webpack_require__","d","astroturf__WEBPACK_IMPORTED_MODULE_0__","n","converter","showdown","Converter","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2___default","HTMLContent","dangerouslySetInnerHTML","__html"],"mappings":"gLAKaA,EAAoBC,IAAMC,EAAA,2BAAqCC,EAArC,2BAAhC,qBAEMC,EAAYH,IAAMI,EAAA,mBAA2BF,EAA3B,mBAAxB,aAEMG,EAAeL,IAAM,0BAA8BE,EAA9B,qBAA3B,gBAEMI,EAAWN,IAAM,sBAA0BE,EAA1B,kBAAvB,YAEMK,EAAOP,IAAMM,EAAA,YAAyBJ,EAAzB,aAAnB,QAEMM,EAAQR,IAAM,mBAAuBE,EAAvB,cAApB,SAEMO,EAAaT,IAAMM,EAAA,kBAA+BJ,EAA/B,oBAAzB,kICFA,IAAMQ,EAAWC,EAAAC,EAAAC,KAAW,SAAAC,GAAS,IAClCC,EAAkDD,EADhBC,MAC3BC,EAA2CF,EADhBE,KACrBC,EAAqCH,EADhBG,aACPC,EAAuBJ,EADhBI,OACCC,EAAeL,EADhBK,WAEpCC,EAAsBC,mBAA5BC,EAAA,EAEA,OACEX,EAAAC,EAAAW,cAAAxB,EAAA,CAAmByB,GAAG,QACpBb,EAAAC,EAAAW,cAAAf,EAAA,CAAOgB,GAAG,UACRb,EAAAC,EAAAW,cAAApB,EAAA,KADFY,GAEEJ,EAAAC,EAAAW,cAAAhB,EAAA,KAFFS,GAGEL,EAAAC,EAAAW,cAAAH,EAAA,CACEK,UAAWC,IADbC,WAEEC,QAFFvB,EAGEwB,QAASZ,KAGZC,GACCA,EAAAY,IAAW,SAAAC,EAAAC,GAAsB,IAAnBC,EAAmBF,EAAnBE,MACNC,EAAeb,mBAArBC,EAAA,EACA,OACEX,EAAAC,EAAAW,cAAAW,EAAA,CACEC,IAAG,kBADLH,EAEEP,UAAWC,IAFbC,WAGEC,QAHFpB,EAIEqB,QAASI,MAIjBtB,EAAAC,EAAAW,cAAAd,EAAA,KAvBJU,MAiCWiB,GALEC,EAAA,iBAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAASzB,EAAY0B,IAAAF,EAAA,UAC/BG,EAAiBF,GAAQA,EAARA,gBAA+BA,iBAAtDG,YACA,OAAO/B,EAAAC,EAAAW,cAAAb,EAAAiC,OAAAC,OAAA,GAAA9B,EAAP2B,KAGK,iDCpDPI,EAAAC,EAAAT,EAAA,sBAAApC,IAAA,IAAA8C,EAAAF,EAAA,GAEa5C,EAFb4C,EAAAG,EAAAD,EAEuB/C,GAAM,yBAA6BE,EAA7B,eAAtB,kKCCD+C,EAAY,WAAIC,EAAtBC,WAEa7B,EAAU,SAAAS,GAAA,IAAGH,EAAHG,EAAAH,QAAYC,EAAZE,EAAAF,QAAwBf,EAAxBsC,IAAArB,EAAA,8BACrBH,EAAUyB,EAAAzC,EAAAW,cAAAK,EAAAd,EAAHe,GAA6CwB,EAAAzC,EAAAW,cAAA,MAAAT,EAD/Be,IAGVyB,EAAc,SAAAhB,GAAA,IAAGV,EAAHU,EAAAV,QAAYC,EAAZS,EAAAT,QAAwBf,EAAxBsC,IAAAd,EAAA,8BACzBV,EACEyB,EAAAzC,EAAAW,cAAAK,EAAAe,OAAAC,OAAA,CAASW,wBAAyB,CAAEC,OAAQP,gBADvCnC,IAGLuC,EAAAzC,EAAAW,cAAA,MAAAoB,OAAAC,OAAA,CAAKW,wBAAyB,CAAEC,OAAQP,gBAJjBnC,wCCN3B,IAAMY,EAASxB,EAAf,KAEAmC,EAAA","file":"component---src-pages-politics-index-js-7cab0d2ad539d7f21170.js","sourcesContent":["import styled from \"astroturf\";\n\nimport { Article } from \"../components/Elements/Article\";\nimport { BigH1 } from \"../components/Typography/Headlines\";\n\nexport const PoliticsContainer = styled(Article, null, \"PoliticsContainer\", require(\"./politics-PoliticsContainer.module.scss\"), \"politics-container\", \"politicsContainer\");\n\nexport const MainTitle = styled(BigH1, null, \"MainTitle\", require(\"./politics-MainTitle.module.scss\"), \"main-title\", \"mainTitle\");\n\nexport const Introduction = styled(\"div\", null, \"Introduction\", require(\"./politics-Introduction.module.scss\"), \"introduction\", \"introduction\");\n\nexport const SubTitle = styled(\"div\", null, \"SubTitle\", require(\"./politics-SubTitle.module.scss\"), \"sub-title\", \"subTitle\");\n\nexport const City = styled(SubTitle, null, \"City\", require(\"./politics-City.module.scss\"), \"city\", \"city\");\n\nexport const Block = styled(\"div\", null, \"Block\", require(\"./politics-Block.module.scss\"), \"block\", \"block\");\n\nexport const UpdateDate = styled(SubTitle, null, \"UpdateDate\", require(\"./politics-UpdateDate.module.scss\"), \"update-date\", \"updateDate\");\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport {\n  PoliticsContainer,\n  Introduction,\n  MainTitle,\n  City,\n  Block,\n  UpdateDate,\n} from \"../../styles/politics\";\nimport { isReactElement } from \"../../utils/dom\";\nimport { Content, HTMLContent } from \"../../cms/common/Content\";\nimport styles from \"../../styles/typography\";\n\nexport const Politics = React.memo(props => {\n  const { title, city, introduction, blocks, updateDate } = props;\n  const IntroductionContent = isReactElement(introduction) ? Content : HTMLContent;\n\n  return (\n    <PoliticsContainer as=\"main\">\n      <Block as=\"header\">\n        <MainTitle>{title}</MainTitle>\n        <City>{city}</City>\n        <IntroductionContent\n          className={styles.typography}\n          Element={Introduction}\n          content={introduction}\n        />\n      </Block>\n      {blocks &&\n        blocks.map(({ block }, index) => {\n          const BlockElement = isReactElement(block) ? Content : HTMLContent;\n          return (\n            <BlockElement\n              key={`politics-block-${index}`}\n              className={styles.typography}\n              Element={Block}\n              content={block}\n            />\n          );\n        })}\n      <UpdateDate>{updateDate}</UpdateDate>\n    </PoliticsContainer>\n  );\n});\n\nexport default ({ data, ...props }) => {\n  const normalizedData = data && data.markdownRemark && data.markdownRemark.frontmatter;\n  return <Politics {...props} {...normalizedData} />;\n};\n\nexport const politicsPageQuery = graphql`\n  query politicsPage {\n    markdownRemark(frontmatter: { templateKey: { eq: \"politics-page\" } }) {\n      frontmatter {\n        title\n        city\n        updateDate\n        introduction\n        blocks {\n          block\n        }\n      }\n    }\n  }\n`;\n","import styled from \"astroturf\";\n\nexport const Article = styled(\"article\", null, \"Article\", require(\"./Article.module.scss\"), \"article\", \"article\");\n","import React from \"react\";\nimport showdown from \"showdown\";\n\nconst converter = new showdown.Converter();\n\nexport const Content = ({ Element, content, ...props }) =>\n  Element ? <Element {...props}>{content}</Element> : <div {...props}>{content}</div>;\n\nexport const HTMLContent = ({ Element, content, ...props }) =>\n  Element ? (\n    <Element dangerouslySetInnerHTML={{ __html: converter.makeHtml(content) }} {...props} />\n  ) : (\n    <div dangerouslySetInnerHTML={{ __html: converter.makeHtml(content) }} {...props} />\n  );\n","\n\nconst styles = require('./typography-styles.module.scss');\n\nexport default styles;\n"],"sourceRoot":""}