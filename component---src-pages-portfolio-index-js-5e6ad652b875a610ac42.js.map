{"version":3,"sources":["webpack:///./src/components/PortfolioSlide/styles.js","webpack:///./src/components/PortfolioSlide/Screenshoots.js","webpack:///./src/components/PortfolioSlide/Content.js","webpack:///./src/components/PortfolioSlide/TransitionSlide.js","webpack:///./src/components/PortfolioSlide/PortfolioSlide.js","webpack:///./src/styles/portfolio.js","webpack:///./src/pages/portfolio/index.js","webpack:///./src/styles/transition.js"],"names":["ContainerTransitionGroup","styled","react_transition_group","require","PortfolioSlideContainer","SliderBackground","Title","Description","Content","MobileTitle","ScreenshotTransitionGroup","Screenshot","LongreadBackground","transitionScroll","slideUpScroll","slideDownScroll","Screenshoots","_Component","apply","this","arguments","inheritsLoose_default","prototype","render","_this$props","props","screenshots","isNext","text","status","direction","id","classNames","screenshotSlideUp","screenshotSlideDown","scrollScreenshotTransitionNext","scrollScreenshotTransition","react_default","a","createElement","isMobileMsp","className","cn","src","alt","react","propTypes","PropTypes","bool","description","title","styles_Content","slideUp","slideDown","fade","transition","as","GoNextLink","white","string","number","TransitionSlide","_this","_len","length","args","Array","_key","call","concat","state","flag","hovered","getDerivedStateFromProps","nextProps","prevState","images","projectBackgroundColor","_this2","_this$state","nextId","goToLongread","onContainerRef","sectionDirection","up","down","transitionEnd","onResize","onExited","nextSlide","scrollDown","transitionUp","entering","transform","exiting","scrollClassNames","style","Object","assign","willChange","onClick","ref","onMouseOver","setState","onMouseOut","onTransitionEnd","e","background","Screenshoots_Screenshoots","Content_Content","func","selectedSectionIndex","sections","object","PortfolioSlide","top","left","width","height","getSlideBoundingClientRect","slide","_this$slide$getBoundi","getBoundingClientRect","topRect","leftRect","bottom","window","scrollY","scrollX","Math","setImages","ratio","_ref","item","_this$props2","navigate","setTimeout","debounce","_proto","componentDidMount","componentWillUnmount","getSnapshotBeforeUpdate","componentDidUpdate","prevTransitionEnd","_ref2","snapshot","_this$props3","sectionImages","isArray","map","img","Fragment","ImagesDownloadListener","key","timeout","enter","exit","TransitionSlide_TransitionSlide","Portal","onSectionChange","parentTitle","lastSectionIndex","Main","LeftSide","Section","Rightside","portfolio","PortfolioBase","location","isPortfolioPage","disableBackgroundTransition","routes","getRouteByLocation","section","portfolio_Main","Background","common","russiaBackground","transitionDuration","animation","AdditionalMenu","styles","menu","selectedId","leftSide","additionalMenu","isOpen","PortfolioSlide_PortfolioSlide","getPixelRatioPropName","Component","PortfolioWithLayout","MainLayoutProvider","layoutProps","portfolio_PortfolioBase","Portfolio","withRouter","portfolio_PortfolioWithLayout","__webpack_exports__","__webpack_require__","d"],"mappings":"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","file":"component---src-pages-portfolio-index-js-5e6ad652b875a610ac42.js","sourcesContent":["import styled from \"astroturf\"\nimport { TransitionGroup } from \"react-transition-group\";\n\nexport const ContainerTransitionGroup = styled(TransitionGroup, null, \"ContainerTransitionGroup\", require(\"./styles-ContainerTransitionGroup.module.scss\"), \"container-transition-group\", \"containerTransitionGroup\");\n\nexport const PortfolioSlideContainer = styled(\"div\", null, \"PortfolioSlideContainer\", require(\"./styles-PortfolioSlideContainer.module.scss\"), \"portfolio-slide-container\", \"portfolioSlideContainer\");\n\nexport const SliderBackground = styled(\"div\", null, \"SliderBackground\", require(\"./styles-SliderBackground.module.scss\"), \"slider-background\", \"sliderBackground\");\n\nexport const Title = styled(\"h2\", null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const Description = styled(\"p\", null, \"Description\", require(\"./styles-Description.module.scss\"), \"description\", \"description\");\n\nexport const Content = styled(\"div\", null, \"Content\", require(\"./styles-Content.module.scss\"), \"content\", \"content\");\n\nexport const MobileTitle = styled(\"h1\", null, \"MobileTitle\", require(\"./styles-MobileTitle.module.scss\"), \"mobile-title\", \"mobileTitle\");\n\nexport const ScreenshotTransitionGroup = styled(\"div\", null, \"ScreenshotTransitionGroup\", require(\"./styles-ScreenshotTransitionGroup.module.scss\"), \"screenshot-transition-group\", \"screenshotTransitionGroup\");\n\nexport const Screenshot = styled(\"img\", null, \"Screenshot\", require(\"./styles-Screenshot.module.scss\"), \"screenshot\", \"screenshot\");\n\nexport const LongreadBackground = styled(\"div\", null, \"LongreadBackground\", require(\"./styles-LongreadBackground.module.scss\"), \"longread-background\", \"longreadBackground\");\n\nexport const transitionScroll = require('./styles-transitionScroll.module.scss');\n\nexport const slideUpScroll = require('./styles-slideUpScroll.module.scss');\n\nexport const slideDownScroll = require('./styles-slideDownScroll.module.scss');\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport { ScreenshotTransitionGroup, Screenshot } from \"./styles\";\nimport {\n  screenshotSlideUp,\n  screenshotSlideDown,\n  scrollScreenshotTransition,\n  scrollScreenshotTransitionNext,\n} from \"../../styles/transition\";\n\nexport class Screenshoots extends Component {\n  static propTypes = {\n    isNext: PropTypes.bool,\n  };\n\n  render() {\n    const { screenshots, isNext, text, status, direction, id } = this.props;\n    const slideY = direction > 0 ? screenshotSlideUp[status] : screenshotSlideDown[status];\n\n    const classNames = [\n      slideY,\n      isNext ? scrollScreenshotTransitionNext[status] : scrollScreenshotTransition[status],\n    ];\n\n    return (\n      <ScreenshotTransitionGroup>\n        <Screenshot\n          isMobileMsp={id === \"mobileMsp\"}\n          className={cn(...classNames)}\n          src={screenshots}\n          alt={text}\n        />\n      </ScreenshotTransitionGroup>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport { GoNextLink } from \"../../components/GoNextLink/GoNextLink\";\nimport { Content as ContentBlock, Description, Title } from \"./styles\";\n\nimport { transition, slideDown, slideUp, fade } from \"../../styles/transition\";\n\nexport class Content extends Component {\n  static propTypes = {\n    text: PropTypes.string,\n    description: PropTypes.string,\n    direction: PropTypes.number,\n    title: PropTypes.string,\n    status: PropTypes.string,\n  };\n\n  render() {\n    const { status, direction, description, title, text } = this.props;\n\n    return (\n      <ContentBlock\n        className={cn(\n          direction > 0 ? slideUp[status] : slideDown[status],\n          fade[status],\n          transition[status],\n        )}\n      >\n        <Title as=\"h2\">{title || text}</Title>\n        <Description>\n          {description ||\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam eaque eligendi iusto labore nisi quas.\"}\n        </Description>\n        <GoNextLink white>Подробнее</GoNextLink>\n      </ContentBlock>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport { fade } from \"../../styles/transition\";\nimport {\n  PortfolioSlideContainer,\n  SliderBackground,\n  transitionScroll,\n  slideUpScroll,\n  slideDownScroll,\n} from \"./styles\";\nimport { Screenshoots } from \"./Screenshoots\";\nimport { Content } from \"./Content\";\n\nexport class TransitionSlide extends Component {\n  static propTypes = {\n    goToLongread: PropTypes.func,\n    onContainerRef: PropTypes.func,\n    selectedSectionIndex: PropTypes.number,\n    sections: PropTypes.arrayOf(PropTypes.object),\n    up: PropTypes.number,\n    down: PropTypes.number,\n    transitionEnd: PropTypes.bool,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { description, id, title, text, images, projectBackgroundColor } = nextProps;\n    const { flag } = prevState;\n\n    if (!flag) {\n      return {\n        flag: true,\n        projectBackgroundColor,\n        images,\n        id,\n        description,\n        title,\n        text,\n      };\n    }\n\n    return null;\n  }\n\n  state = {\n    flag: false,\n    hovered: false,\n  };\n\n  render() {\n    const { id, description, title, text, images, projectBackgroundColor, hovered } = this.state;\n    const {\n      id: nextId,\n      goToLongread,\n      onContainerRef,\n      sectionDirection,\n      status,\n      up,\n      down,\n      transitionEnd,\n      onResize,\n      onExited,\n    } = this.props;\n\n    const nextSlide = id === nextId;\n\n    const scrollDown = sectionDirection > 0;\n\n    const transitionUp = scrollDown\n      ? {\n          entering: { transform: `translateY(${down}px)` },\n          exiting: { transform: `translateY(-${down}px)` },\n        }\n      : {\n          entering: { transform: `translateY(-${up}px)` },\n          exiting: { transform: `translateY(${up}px)` },\n        };\n\n    const scrollClassNames = [\n      scrollDown ? slideUpScroll[status] : slideDownScroll[status],\n      !nextSlide && fade[status],\n      transitionScroll[status],\n    ];\n\n    return (\n      <PortfolioSlideContainer\n        style={{\n          ...transitionUp[status],\n        }}\n        className={cn(...scrollClassNames)}\n        willChange={transitionEnd}\n        onClick={goToLongread}\n        ref={onContainerRef}\n        onMouseOver={() => this.setState({ hovered: true })}\n        onMouseOut={() => this.setState({ hovered: false })}\n        onTransitionEnd={e => {\n          if (e.propertyName === \"transform\" && e.elapsedTime >= 0.4) {\n            onResize();\n            onExited();\n          }\n        }}\n      >\n        <SliderBackground\n          hovered={hovered}\n          style={{\n            background: projectBackgroundColor,\n          }}\n        />\n        <Screenshoots\n          id={id}\n          isNext={nextSlide}\n          status={status}\n          direction={sectionDirection}\n          text={text}\n          screenshots={images}\n        />\n        <Content\n          status={status}\n          direction={sectionDirection}\n          title={title}\n          text={text}\n          description={description}\n        />\n      </PortfolioSlideContainer>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport debounce from \"lodash/debounce\";\nimport { Transition } from \"react-transition-group\";\n\nimport { ImagesDownloadListener } from \"../../components/ImagesDownloadListener/ImagesDownloadListener\";\nimport { ContainerTransitionGroup, LongreadBackground } from \"./styles\";\nimport { TransitionSlide } from \"./TransitionSlide\";\nimport { Portal } from \"../../components/Portal/Portal\";\n\nexport class PortfolioSlide extends Component {\n  static propTypes = {\n    projectBackgroundColor: PropTypes.string,\n    text: PropTypes.string,\n    description: PropTypes.string,\n    screenshots: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.object]),\n    id: PropTypes.string,\n    onSectionChange: PropTypes.func,\n    selectedSectionIndex: PropTypes.number,\n    sections: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n    parentTitle: PropTypes.string,\n    sectionDirection: PropTypes.number,\n    navigate: PropTypes.func,\n    transitionEnd: PropTypes.bool,\n    direction: PropTypes.number,\n    lastSectionIndex: PropTypes.number,\n    onExited: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onResize = debounce(this.onResize, 200);\n  }\n\n  state = {\n    id: null,\n    goToLongread: false,\n    images: [],\n\n    top: 0,\n    up: 0,\n    down: 0,\n    left: 0,\n    width: 0,\n    height: 0,\n  };\n\n  componentDidMount() {\n    this.onResize();\n    this.setImages();\n    window.addEventListener(\"resize\", this.onResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onResize);\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    return this.getSlideBoundingClientRect();\n  }\n\n  componentDidUpdate({ transitionEnd: prevTransitionEnd }, prevState, snapshot) {\n    const { transitionEnd } = this.props;\n\n    if (prevTransitionEnd !== transitionEnd && transitionEnd) {\n      this.setState(snapshot);\n    }\n  }\n\n  onResize = () => this.setState(this.getSlideBoundingClientRect());\n\n  getSlideBoundingClientRect = () => {\n    if (this.slide) {\n      const {\n        top: topRect,\n        left: leftRect,\n        width,\n        height,\n        bottom,\n      } = this.slide.getBoundingClientRect();\n\n      const top = topRect + window.scrollY;\n      const left = leftRect + window.scrollX;\n\n      return {\n        top: Math.round(top),\n        left: Math.round(left),\n        width: Math.round(width),\n        height: Math.round(height),\n        up: Math.round(top + height),\n        down: Math.round(window.innerHeight - bottom + height),\n      };\n    }\n  };\n\n  setImages = () => {\n    const { sections, ratio } = this.props;\n\n    const images = [];\n\n    sections.forEach(({ screenshots }) => {\n      if (Array.isArray(screenshots)) {\n        screenshots.forEach(item => images.push(item[ratio]));\n      } else {\n        images.push(screenshots[ratio]);\n      }\n    });\n\n    this.setState({ images });\n  };\n\n  goToLongread = () => {\n    const { navigate, id } = this.props;\n    this.setState(\n      {\n        goToLongread: true,\n      },\n      () => {\n        setTimeout(() => {\n          navigate(`/${id}`);\n        }, 200);\n      },\n    );\n  };\n\n  onContainerRef = ref => {\n    if (ref) {\n      this.slide = ref;\n    }\n  };\n\n  render() {\n    const { top, down, up, left, width, height, goToLongread, images } = this.state;\n    const { projectBackgroundColor, id, screenshots, ratio } = this.props;\n\n    const sectionImages = Array.isArray(screenshots)\n      ? screenshots.map(img => img[ratio])\n      : screenshots[ratio];\n\n    return (\n      <>\n        <ImagesDownloadListener images={images} />\n        <ContainerTransitionGroup>\n          <Transition\n            key={`${id}-portfolio-slide-animation`}\n            timeout={{\n              enter: 0,\n              exit: 400,\n            }}\n          >\n            {status => (\n              <TransitionSlide\n                {...this.props}\n                status={status}\n                onResize={this.onResize}\n                onContainerRef={this.onContainerRef}\n                goToLongread={this.goToLongread}\n                images={sectionImages}\n                up={up}\n                down={down}\n              />\n            )}\n          </Transition>\n        </ContainerTransitionGroup>\n        {typeof window !== \"undefined\" && (\n          <Portal>\n            <LongreadBackground\n              goToLongread={goToLongread}\n              style={{\n                background: projectBackgroundColor,\n                top: goToLongread ? 0 : top,\n                left: goToLongread ? 0 : left,\n                width: goToLongread ? \"100vw\" : width,\n                height: goToLongread ? \"100vh\" : height,\n              }}\n            />\n          </Portal>\n        )}\n      </>\n    );\n  }\n}\n","import styled from \"astroturf\"\n\nimport { Main as MainBlock } from \"../components/MainPageElements/Main\";\nimport { Side } from \"../components/MainPageElements/Section\";\n\nexport const Main = styled(MainBlock, null, \"Main\", require(\"./portfolio-Main.module.scss\"), \"main\", \"main\");\n\nexport const LeftSide = styled(Side, null, \"LeftSide\", require(\"./portfolio-LeftSide.module.scss\"), \"left-side\", \"leftSide\");\n\nexport const Rightside = styled(Side, null, \"Rightside\", require(\"./portfolio-Rightside.module.scss\"), \"rightside\", \"rightside\");\n\nconst styles = require('./portfolio-styles.module.scss');\n\nexport default styles;\n","import React, { Component } from \"react\";\n\nimport { Background } from \"../../components/MainPageElements/Background\";\nimport { MainLayoutConsumer } from \"../../components/MainLayoutProvider/MainLayoutProvider\";\nimport { getRouteByLocation } from \"../../routes/utils\";\nimport { AdditionalMenu } from \"../../components/AdditionalMenu/AdditionalMenu\";\nimport { PortfolioSlide } from \"../../components/PortfolioSlide/PortfolioSlide\";\nimport styles, { Main, LeftSide, Rightside } from \"../../styles/portfolio\";\nimport { MobileTitle } from \"../../components/PortfolioSlide/styles\";\nimport { common } from \"../../styles/common\";\nimport withRouter from \"../../hoc/withRouter\";\nimport { animation } from \"../../components/MainPageElements/Section\";\nimport { getPixelRatioPropName } from \"../../utils/utils\";\n\nclass PortfolioBase extends Component {\n  render() {\n    const {\n      location,\n      navigate,\n      isPortfolioPage,\n      selectedSectionIndex,\n      onSectionChange,\n      sectionDirection,\n      transitionEnd,\n      direction,\n      status,\n      disableBackgroundTransition,\n      lastSectionIndex,\n      onExited,\n      routes,\n    } = this.props;\n    const currentRoute = getRouteByLocation(location, routes);\n    const { sections } = currentRoute;\n    const section = sections[lastSectionIndex || selectedSectionIndex];\n\n    return (\n      <Main>\n        <Background\n          className={common.russiaBackground}\n          style={{ transitionDuration: disableBackgroundTransition && \"20ms\" }}\n          status={status}\n          location={location}\n        />\n        <LeftSide className={animation(status, direction)}>\n          <MobileTitle>{section && section.parentTitle}</MobileTitle>\n          <AdditionalMenu\n            isPortfolioPage={isPortfolioPage()}\n            className={styles.menu}\n            selectedId={section && section.id}\n            onSectionChange={onSectionChange}\n            leftSide\n            additionalMenu={sections}\n            isOpen={true}\n          />\n        </LeftSide>\n        <Rightside className={animation(status, direction)}>\n          <PortfolioSlide\n            ratio={getPixelRatioPropName()}\n            onExited={onExited}\n            lastSectionIndex={lastSectionIndex}\n            transitionEnd={transitionEnd}\n            sectionDirection={sectionDirection}\n            direction={direction}\n            sections={sections}\n            selectedSectionIndex={selectedSectionIndex}\n            onSectionChange={onSectionChange}\n            navigate={navigate}\n            {...section}\n          />\n        </Rightside>\n      </Main>\n    );\n  }\n}\n\nexport const PortfolioWithLayout = props => (\n  <MainLayoutConsumer>\n    {layoutProps => <PortfolioBase {...props} {...layoutProps} />}\n  </MainLayoutConsumer>\n);\n\nconst Portfolio = withRouter(PortfolioWithLayout);\n\nexport default Portfolio;\n","\n\nexport const transition = require('./transition-transition.module.scss');\n\nexport const fade = require('./transition-fade.module.scss');\n\nexport const slideUp = require('./transition-slideUp.module.scss');\n\nexport const slideDown = require('./transition-slideDown.module.scss');\n\nexport const slideLeft = require('./transition-slideLeft.module.scss');\n\nexport const slideRight = require('./transition-slideRight.module.scss');\n\nexport const scrollScreenshotTransition = require('./transition-scrollScreenshotTransition.module.scss');\n\nexport const scrollScreenshotTransitionNext = require('./transition-scrollScreenshotTransitionNext.module.scss');\n\nexport const screenshotSlideUp = require('./transition-screenshotSlideUp.module.scss');\n\nexport const screenshotSlideDown = require('./transition-screenshotSlideDown.module.scss');\n"],"sourceRoot":""}