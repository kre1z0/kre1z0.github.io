{"version":3,"sources":["webpack:///./src/components/HowWeAreWorking/Principle/styles.js","webpack:///./src/components/HowWeAreWorking/Principle/Principle.js","webpack:///./src/components/HowWeAreWorking/styles.js","webpack:///./src/components/HowWeAreWorking/HowWeAreWorking.js","webpack:///./src/components/TeamMembers/TeamMembers.js","webpack:///./src/utils/number.js","webpack:///./src/components/ScrollableTeamMembers/ScrollableTeamMembers.js","webpack:///./src/styles/jobs.js","webpack:///./src/pages/jobs/index.js"],"names":["Container","styled","require","Item","Title","H4","Description","Badge","Content","Principle","_ref","items","itemClassName","_ref$longread","longread","react_default","a","createElement","map","_ref2","icon","title","description","key","className","style","backgroundImage","propTypes","PropTypes","string","arrayOf","object","HowWeAreWorkingContainer","Paragraph","styles","HowWeAreWorking","styles_Title","Principle_Principle","GoNextLink","to","gatsby","howWeAreWorkingLink","TeamMembers","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","state","cardHeight","photoHeight","margin","onResize","Math","max","document","documentElement","clientWidth","window","innerWidth","setState","inheritsLoose_default","_proto","prototype","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","shouldComponentUpdate","_ref3","nextSelectedId","selectedId","nextCardHeight","_this$props","props","id","render","newArray","firstCol","lastCol","n","min","_this$state","marginFromState","_this$props2","isVisible","isVacancy","isPhoto","data","slice","forEach","item","i","push","height","top","half","round","containerHeight","ceil","noVacancies","HowWeAreWorking_HowWeAreWorking","oneItem","NoVacancyCard","index","marginTop","marginBottom","src","alt","TeamMemberCard","Object","assign","control","longreadLink","avatar","vacancy","withMarginTop","Component","oneOfType","onSectionChange","func","defaultProps","ScrollableTeamMembers","_PureComponent","componentDidUpdate","prevState","prevTransitionEnd","transitionEnd","scrollToBlock","selectedSectionIndex","sections","Fragment","TeamMembers_TeamMembers","PureComponent","isRequired","number","bool","Main","MainBlock","BackgroundWrapper","WillChange","LeftSide","Side","RightSide","RightSideContent","JobsBase","prevScrollTop","scrollTop","location","onScrollableRef","onLeftSideSectionRef","status","routes","getRouteByLocation","section","transform","jobs_Main","Background","background","ref","animation","AdditionalMenu","menu","leftSide","additionalMenu","isOpen","ScrollableTeamMembers_ScrollableTeamMembers","Jobs","MainLayoutProvider","layoutProps","jobs_JobsBase"],"mappings":"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","file":"component---src-pages-jobs-index-js-28bb46e2353d0191f0fa.js","sourcesContent":["import styled from \"astroturf\";\n\nimport { H4 } from \"../../../components/Typography/Headlines\";\n\nexport const Container = styled(\"div\", null, \"Container\", require(\"./styles-Container.module.scss\"), \"container\", \"container\");\n\nexport const Item = styled(\"article\", null, \"Item\", require(\"./styles-Item.module.scss\"), \"item\", \"item\");\n\nexport const Title = styled(H4, null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const Description = styled(\"p\", null, \"Description\", require(\"./styles-Description.module.scss\"), \"description\", \"description\");\n\nexport const Badge = styled(\"div\", null, \"Badge\", require(\"./styles-Badge.module.scss\"), \"badge\", \"badge\");\n\nexport const Content = styled(\"div\", null, \"Content\", require(\"./styles-Content.module.scss\"), \"content\", \"content\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Container, Item, Badge, Content, Title, Description } from \"./styles\";\n\nexport const Principle = ({ items, itemClassName, longread = false }) => (\n  <Container longread={longread}>\n    {items &&\n      items.map(({ icon, title, description }) => (\n        <Item key={title} className={itemClassName}>\n          <Badge style={{ backgroundImage: `url(${icon})` }} longread={longread} />\n          <Content>\n            {longread ? <Title>{title}</Title> : <span>{title}</span>}\n            {longread && <Description>{description}</Description>}\n          </Content>\n        </Item>\n      ))}\n  </Container>\n);\n\nPrinciple.propTypes = {\n  itemClassName: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.object),\n};\n","import styled from \"astroturf\"\n\nexport const HowWeAreWorkingContainer = styled(\"div\", null, \"HowWeAreWorkingContainer\", require(\"./styles-HowWeAreWorkingContainer.module.scss\"), \"how-we-are-working-container\", \"howWeAreWorkingContainer\");\n\nexport const Title = styled(\"h4\", null, \"Title\", require(\"./styles-Title.module.scss\"), \"title\", \"title\");\n\nexport const Paragraph = styled(\"p\", null, \"Paragraph\", require(\"./styles-Paragraph.module.scss\"), \"paragraph\", \"paragraph\");\n\nconst styles = require('./styles-styles.module.scss');\n\nexport default styles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { GoNextLink } from \"../../components/GoNextLink/GoNextLink\";\nimport { Principle } from \"./Principle/Principle\";\nimport styles, { HowWeAreWorkingContainer, Title, Paragraph } from \"./styles\";\n\nexport const HowWeAreWorking = ({ items, className }) => {\n  return (\n    <HowWeAreWorkingContainer className={className}>\n      <Title>Как мы работаем</Title>\n      <Paragraph>\n        Мы считаем, что успех любого дела зависит от команды, поэтому создали атмосферу, комфортную\n        для сотрудников.\n        <br />\n        <br />\n        Стараемся давать задачи подходящего уровня, но если сотрудник хочет прыгнуть выше своей\n        головы — команда ему поможет.\n        <br />\n        <br />\n        Каждый член команды — это человек, с которым приятно работать.\n      </Paragraph>\n      <br />\n      <Title>Наши принципы:</Title>\n      <Principle items={items} />\n      <GoNextLink to=\"/work\" gatsby className={styles.howWeAreWorkingLink}>\n        Подробнее о работе в Everpoint\n      </GoNextLink>\n    </HowWeAreWorkingContainer>\n  );\n};\n\nHowWeAreWorking.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  className: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { rateLimit } from \"../../utils/number\";\nimport { NoVacancyCard } from \"./NoVacancyCard\";\nimport { GoNextLink } from \"../../components/GoNextLink/GoNextLink\";\nimport { TeamMemberCard } from \"../../components/TeamMemberCard/TeamMemberCard\";\nimport { TeamMembersContainer, PhotoContainer } from \"./styles\";\nimport { HowWeAreWorking } from \"../HowWeAreWorking/HowWeAreWorking\";\n\nfunction getColumns({ items }) {\n  const newArray = items.slice();\n\n  const firstCol = [];\n  const lastCol = [];\n  newArray.forEach((item, i) => (i % 2 ? lastCol.push(item) : firstCol.push(item)));\n  return firstCol.concat(lastCol);\n}\n\nexport class TeamMembers extends Component {\n  static propTypes = {\n    items: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.object),\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n    id: PropTypes.string,\n    onSectionChange: PropTypes.func,\n    selectedId: PropTypes.string,\n  };\n\n  state = {\n    cardHeight: 320,\n    photoHeight: 225,\n    margin: 30,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.onResize);\n    this.onResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onResize);\n  }\n\n  shouldComponentUpdate({ selectedId: nextSelectedId }, { cardHeight: nextCardHeight }) {\n    const { cardHeight } = this.state;\n    const { selectedId, id } = this.props;\n\n    return (\n      (selectedId !== nextSelectedId && (nextSelectedId === id || selectedId === id)) ||\n      cardHeight !== nextCardHeight\n    );\n  }\n\n  static defaultProps = {\n    items: [],\n  };\n\n  onResize = () => {\n    const viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    if (viewportWidth <= 992) {\n      this.setState({ cardHeight: 320, photoHeight: 164, margin: 30 });\n    } else {\n      this.setState({ cardHeight: 320, photoHeight: 225, margin: 20 });\n    }\n  };\n\n  render() {\n    const { cardHeight, photoHeight, margin: marginFromState } = this.state;\n    const { items, id, selectedId } = this.props;\n    const isVisible = id === selectedId;\n    const isVacancy = id === \"vacancy\";\n    const isPhoto = id === \"photo\";\n    const data = getColumns({ items });\n    const margin = data.length > 2 ? marginFromState : 0;\n    const height = isPhoto ? photoHeight : cardHeight;\n    const top = height / 2;\n    const half = Math.round(data.length / 2);\n    const containerHeight =\n      data.length > 2\n        ? Math.ceil(data.length / 2) * (height + margin) +\n          (data.length % 2 === 0 ? height / 2 : 0) +\n          4\n        : rateLimit(Math.ceil(data.length / 2), 1) * height + 4;\n\n    const noVacancies = isVacancy && items && items.length === 0;\n\n    if (id === \"process\") {\n      return (\n        <TeamMembersContainer isVisible={isVisible}>\n          <HowWeAreWorking items={items} />\n        </TeamMembersContainer>\n      );\n    }\n\n    return (\n      <TeamMembersContainer\n        isVisible={isVisible}\n        oneItem={data.length <= 1}\n        style={{ height: containerHeight + \"px\" }}\n      >\n        {noVacancies ? (\n          <NoVacancyCard />\n        ) : (\n          data.map((item, index) => {\n            if (isPhoto) {\n              const key = `photo-${index + 1}`;\n              return (\n                <PhotoContainer\n                  style={{ marginTop: index === half && top, height, marginBottom: margin }}\n                  key={key}\n                >\n                  <img src={item} alt={key} />\n                </PhotoContainer>\n              );\n            }\n\n            return (\n              <TeamMemberCard\n                control={\n                  isVacancy ? (\n                    <GoNextLink gatsby to={item.longreadLink}>\n                      Описание вакансии\n                    </GoNextLink>\n                  ) : null\n                }\n                avatar={item.avatar}\n                vacancy={isVacancy}\n                withMarginTop={index === half}\n                height={height}\n                top={top}\n                margin={data.length > 1 ? margin : 0}\n                key={item.id}\n                {...item}\n              />\n            );\n          })\n        )}\n      </TeamMembersContainer>\n    );\n  }\n}\n","export function rateLimit(n, min, max) {\n  if (n < min) {\n    return min;\n  } else if (n > max) {\n    return max;\n  } else {\n    return n;\n  }\n}","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { TeamMembers } from \"../TeamMembers/TeamMembers\";\n\nexport class ScrollableTeamMembers extends PureComponent {\n  static propTypes = {\n    selectedId: PropTypes.string,\n    onSectionChange: PropTypes.func,\n    scrollToBlock: PropTypes.func.isRequired,\n    selectedSectionIndex: PropTypes.number,\n    transitionEnd: PropTypes.bool,\n    sections: PropTypes.arrayOf(PropTypes.object),\n  };\n\n  componentDidUpdate({ transitionEnd: prevTransitionEnd }, prevState) {\n    const { transitionEnd, scrollToBlock, selectedSectionIndex } = this.props;\n    if (prevTransitionEnd !== transitionEnd && transitionEnd) {\n      scrollToBlock({ index: selectedSectionIndex });\n    }\n  }\n\n  render() {\n    const { selectedId, onSectionChange, sections } = this.props;\n\n    return (\n      <>\n        {sections.map(item => (\n          <TeamMembers\n            key={item.id}\n            sections={sections}\n            selectedId={selectedId}\n            onSectionChange={onSectionChange}\n            {...item}\n          />\n        ))}\n      </>\n    );\n  }\n}\n","import styled from \"astroturf\"\n\nimport { Main as MainBlock } from \"../components/MainPageElements/Main\";\nimport { Side } from \"../components/MainPageElements/Section\";\n\nexport const Main = styled(MainBlock, null, \"Main\", require(\"./jobs-Main.module.scss\"), \"main\", \"main\");\n\nexport const BackgroundWrapper = styled(\"div\", null, \"BackgroundWrapper\", require(\"./jobs-BackgroundWrapper.module.scss\"), \"background-wrapper\", \"backgroundWrapper\");\n\nexport const WillChange = styled(\"div\", null, \"WillChange\", require(\"./jobs-WillChange.module.scss\"), \"will-change\", \"willChange\");\n\nexport const LeftSide = styled(Side, null, \"LeftSide\", require(\"./jobs-LeftSide.module.scss\"), \"left-side\", \"leftSide\");\n\nexport const RightSide = styled(Side, null, \"RightSide\", require(\"./jobs-RightSide.module.scss\"), \"right-side\", \"rightSide\");\n\nexport const RightSideContent = styled(\"div\", null, \"RightSideContent\", require(\"./jobs-RightSideContent.module.scss\"), \"right-side-content\", \"rightSideContent\");\n\nconst styles = require('./jobs-styles.module.scss');\n\nexport default styles;\n","import React, { Component } from \"react\";\n\nimport { Background } from \"../../components/MainPageElements/Background\";\nimport { MainLayoutConsumer } from \"../../components/MainLayoutProvider/MainLayoutProvider\";\nimport { AdditionalMenu } from \"../../components/AdditionalMenu/AdditionalMenu\";\nimport { ScrollableTeamMembers } from \"../../components/ScrollableTeamMembers/ScrollableTeamMembers\";\nimport { getRouteByLocation } from \"../../routes/utils\";\nimport styles, {\n  Main,\n  BackgroundWrapper,\n  LeftSide,\n  RightSide,\n  RightSideContent,\n  WillChange,\n} from \"../../styles/jobs\";\nimport { animation } from \"../../components/MainPageElements/Section\";\n\nexport class JobsBase extends Component {\n  state = {\n    prevScrollTop: 0,\n  };\n\n  componentDidUpdate({ transitionEnd: prevTransitionEnd }, prevState) {\n    const { transitionEnd, scrollTop } = this.props;\n\n    if (prevTransitionEnd !== transitionEnd) {\n      this.setState({ prevScrollTop: scrollTop });\n    }\n  }\n\n  render() {\n    const { prevScrollTop } = this.state;\n    const {\n      location,\n      selectedSectionIndex,\n      onSectionChange,\n      onScrollableRef,\n      onLeftSideSectionRef,\n      scrollToBlock,\n      transitionEnd,\n      scrollTop,\n      status,\n      routes,\n    } = this.props;\n    const currentRoute = getRouteByLocation(location, routes);\n    const { sections } = currentRoute;\n    const section = sections[selectedSectionIndex];\n    const selectedId = section && section.id;\n\n    const transform = `translateY(${scrollTop}px)`;\n\n    return (\n      <Main>\n        <BackgroundWrapper style={{ transform }}>\n          <Background className={styles.background} status={status} location={location} />\n        </BackgroundWrapper>\n        <WillChange style={{ transform }} ref={onLeftSideSectionRef}>\n          <LeftSide className={animation(status)}>\n            <AdditionalMenu\n              className={styles.menu}\n              selectedId={section && section.id}\n              onSectionChange={onSectionChange}\n              leftSide\n              additionalMenu={sections}\n              isOpen={true}\n            />\n          </LeftSide>\n        </WillChange>\n        <RightSide className={animation(status)}>\n          <RightSideContent\n            ref={onScrollableRef}\n            style={{\n              transform: !transitionEnd && `translateY(-${prevScrollTop}px)`,\n            }}\n          >\n            <ScrollableTeamMembers\n              sections={sections}\n              transitionEnd={transitionEnd}\n              selectedSectionIndex={selectedSectionIndex}\n              scrollToBlock={scrollToBlock}\n              selectedId={selectedId}\n              onSectionChange={onSectionChange}\n            />\n          </RightSideContent>\n        </RightSide>\n      </Main>\n    );\n  }\n}\n\nconst Jobs = props => (\n  <MainLayoutConsumer>{layoutProps => <JobsBase {...props} {...layoutProps} />}</MainLayoutConsumer>\n);\n\nexport default Jobs;\n"],"sourceRoot":""}