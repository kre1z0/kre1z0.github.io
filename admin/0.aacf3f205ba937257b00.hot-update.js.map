{"version":3,"file":"0.aacf3f205ba937257b00.hot-update.js","sources":["webpack:///./src/pages/contacts/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport cn from \"classnames\";\n\nimport { Background } from \"../../components/MainPageElements/Background\";\nimport { ImagesDownloadListener } from \"../../components/ImagesDownloadListener/ImagesDownloadListener\";\nimport metroInterlaced from \"../../assets/img/main-slides/metro.png\";\nimport bus from \"../../assets/img/main-slides/bus.svg\";\nimport metro from \"../../assets/img/main-slides/metro.svg\";\nimport { isMobile, isTablet } from \"../../utils/browser\";\nimport { H2 } from \"../../components/Atoms/Atoms\";\nimport { socials } from \"../../assets/social\";\nimport { AddressLink } from \"../../components/AddressLink/AddressLink\";\n\nimport styles, {\n  Main,\n  Content,\n  LeftSide,\n  RightSide,\n  SocialBlock,\n  SocialLink,\n  Link,\n  PrimaryButton,\n  StopeButton,\n  Copyright,\n} from \"../../styles/contacts\";\nimport { animation } from \"../../components/MainPageElements/Section\";\nimport { MainLayoutConsumer } from \"../../components/MainLayoutProvider/MainLayoutProvider\";\n\nclass ContactsBase extends Component {\n  state = {\n    stope: true,\n    isMobileOrTablet: false,\n    isMobile: null,\n    imagesIsLoaded: false,\n  };\n\n  componentDidMount() {\n    this.setState({ isMobileOrTablet: isMobile() || isTablet(), isMobile: isMobile() });\n  }\n\n  render() {\n    const { status, location, titles, direction, scrollTop } = this.props;\n    const { stope, isMobileOrTablet, imagesIsLoaded, isMobile } = this.state;\n\n    return (\n      <>\n        <Background\n          style={{ top: `${scrollTop}px` }}\n          backgroundImage={imagesIsLoaded ? (stope ? metro : bus) : metroInterlaced}\n          className={cn(styles.background, { [styles.hideBackground]: isMobile })}\n          status={status}\n          location={location}\n        />\n        <Main style={{ transform: `translateY(${scrollTop}px)` }}>\n          <ImagesDownloadListener\n            images={[bus, metro]}\n            onLoad={() => this.setState({ imagesIsLoaded: true })}\n          />\n          <Content className={animation(status, direction)}>\n            <LeftSide>\n              <H2 as=\"h1\">{titles && titles.find(({ id }) => id === \"contacts\").title}</H2>\n              <Link as=\"address\" className={styles.address}>\n                127051, Россия, <br /> г. Москва, ул. Трубная, д. 25, к. 1\n              </Link>\n              {isMobileOrTablet && <AddressLink>Открыть адрес на карте</AddressLink>}\n              <Link href=\"tel:+74955060774\">+7 (495) 506-07-74</Link>\n              <Link href=\"mailto:info@everpoint.ru\">info@everpoint.ru</Link>\n              <SocialBlock>\n                {socials.map(({ img, link, name }) => (\n                  <SocialLink\n                    target=\"_blank\"\n                    href={link}\n                    key={`social-${name}`}\n                    style={{ backgroundImage: `url(${img})` }}\n                  />\n                ))}\n              </SocialBlock>\n            </LeftSide>\n            <RightSide>\n              <PrimaryButton\n                raisedButton\n                onClick={() => this.setState({ stope: true })}\n                isActive={stope}\n              >\n                Метро\n              </PrimaryButton>\n              <StopeButton\n                raisedButton\n                onClick={() => this.setState({ stope: false })}\n                isActive={!stope}\n              >\n                Остановки\n              </StopeButton>\n            </RightSide>\n          </Content>\n          <Copyright className={cn(animation(status, direction))} as=\"footer\">\n            © ООО «Эверпоинт», 2019. Все права защищены.\n          </Copyright>\n        </Main>\n      </>\n    );\n  }\n}\n\nexport const ContactsWithLayout = props => (\n  <MainLayoutConsumer>\n    {layoutProps => <ContactsBase {...props} {...layoutProps} />}\n  </MainLayoutConsumer>\n);\n\nexport default ContactsWithLayout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;;;;;;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;;;;;;;;AA1EA;AACA;AA2EA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;;;;;;;;;;AAlFA;AA4EA;;;;;;;;;;;;;;A","sourceRoot":""}